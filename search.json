[{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"access-shapefile-data-from-stats-nz-tatauranga-aotearoa","dir":"Articles","previous_headings":"","what":"Access shapefile data from Stats NZ Tatauranga Aotearoa","title":"Access geospatial data","text":"Stats NZ Tatauranga Aotearoa website provides access range geospatial data including shapefiles. read_web_sf function can used access data. access regional boundaries shape file Stats NZ.","code":"# Read the shapefile data from Stats NZ url <- \"https://datafinder.stats.govt.nz/\" # Base URL layer_id <- 111182 # Layer ID for the regional shapefile key <- Sys.getenv(\"STATS_NZ_KEY\") # Stats NZ API key  # Read the shapefile data nz_shapefile <- read_web_sf(url = url, layer_id = layer_id, key = key) nz_shapefile #> Simple feature collection with 17 features and 8 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 1067061 ymin: 4701317 xmax: 2523320 ymax: 6242140 #> Projected CRS: NZGD2000 / New Zealand Transverse Mercator 2000 #> # A tibble: 17 × 9 #>    gml_id          REGC202 C2023_V       V1_00_N LAND_AR AREA_SQ Shp_Lng Shap_Ar #>    <chr>           <chr>   <chr>         <chr>     <dbl>   <dbl>   <dbl>   <dbl> #>  1 layer-111182.1  01      Northland Re… Northl…  12507.  30084.  8.11e5 3.01e10 #>  2 layer-111182.2  02      Auckland Reg… Auckla…   4941.  16156.  6.61e5 1.62e10 #>  3 layer-111182.3  03      Waikato Regi… Waikat…  23901.  34889.  1.27e6 3.49e10 #>  4 layer-111182.4  04      Bay of Plent… Bay of…  12072.  21884.  1.09e6 2.19e10 #>  5 layer-111182.5  05      Gisborne Reg… Gisbor…   8385.  13989.  6.96e5 1.40e10 #>  6 layer-111182.6  06      Hawke's Bay … Hawke'…  14139.  21444.  9.29e5 2.14e10 #>  7 layer-111182.7  07      Taranaki Reg… Tarana…   7255.  12697.  5.64e5 1.27e10 #>  8 layer-111182.8  08      Manawat?-Wha… Manawa…  22221.  25322.  1.18e6 2.53e10 #>  9 layer-111182.9  09      Wellington R… Wellin…   8049.  15945.  5.79e5 1.59e10 #> 10 layer-111182.10 12      West Coast R… West C…  23246.  36340.  1.58e6 3.63e10 #> 11 layer-111182.11 13      Canterbury R… Canter…  44504.  56774.  1.54e6 5.68e10 #> 12 layer-111182.12 14      Otago Region  Otago …  31186.  38514.  1.28e6 3.85e10 #> 13 layer-111182.13 15      Southland Re… Southl…  31219.  55238.  1.40e6 5.52e10 #> 14 layer-111182.14 16      Tasman Region Tasman…   9616.  14800.  7.59e5 1.48e10 #> 15 layer-111182.15 17      Nelson Region Nelson…    422.   1235.  1.70e5 1.23e 9 #> 16 layer-111182.16 18      Marlborough … Marlbo…  10458.  17689.  7.67e5 1.77e10 #> 17 layer-111182.17 99      Area Outside… Area O…    799.  15759.  6.64e5 1.58e10 #> # ℹ 1 more variable: geometry <MULTIPOLYGON [m]>"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"visualise-the-shapefile-data","dir":"Articles","previous_headings":"Access shapefile data from Stats NZ Tatauranga Aotearoa","what":"Visualise the shapefile data","title":"Access geospatial data","text":"can easily visualised using tmap package. regions boundaries regional councils New Zealand. However Chatham islands across international date line can make plotting difficult. remove shapefile.","code":"# Remove the Chatham Islands from the shapefile nz_shapefile <- nz_shapefile |>    dplyr::filter(C2023_V != \"Area Outside Region\") # View the shapefile data tm_shape(nz_shapefile, name = \"Regional Council boundaries\") +   tm_borders(col = \"blue\")"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"access-elevation-data-from-linz","dir":"Articles","previous_headings":"","what":"Access elevation data from LINZ","title":"Access geospatial data","text":"use Lake Rotoroa example demonstrate access elevation data LINZ Data Service.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"define-the-location-of-the-lake","dir":"Articles","previous_headings":"Access elevation data from LINZ","what":"Define the location of the lake","title":"Access geospatial data","text":"define location Lake Rotoroa create spatial dataframe point lake using sf package.","code":"# Define the location of the lake lat <- -37.79881 lon <- 175.2742 lake <- \"Lake Rotoroa\"   # Create a spatial dataframe of the lake point pnt <- sf::st_point(c(lon, lat)) |>    sf::st_sfc(crs = 4326) |>    sf::st_sf() |>    sf::st_set_geometry(value = \"geometry\") |>    dplyr::mutate(title = lake) pnt #> Simple feature collection with 1 feature and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 175.2742 ymin: -37.79881 xmax: 175.2742 ymax: -37.79881 #> Geodetic CRS:  WGS 84 #>                     geometry        title #> 1 POINT (175.2742 -37.79881) Lake Rotoroa"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"visualise-the-location-of-the-lake","dir":"Articles","previous_headings":"Access elevation data from LINZ > Define the location of the lake","what":"Visualise the location of the lake","title":"Access geospatial data","text":"can visualise location lake using tmap package.","code":"# View the location of the lake in a map map <- tm_shape(pnt, name = \"Lake\") +   tm_markers(popup.vars = \"title\")   map +   tm_view(set.view = 15)"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"dem-metadata","dir":"Articles","previous_headings":"Access elevation data from LINZ > Query DEM metadata for elevation","what":"DEM metadata","title":"Access geospatial data","text":"Within aemetools package, spatial features (sf) dataframe contains metadata various Digital Elevation Models (DEMs) New Zealand available LINZ Data Service. can use find elevation Lake Rotoroa.","code":"nz_dem_metadata"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"view-dem-coverage","dir":"Articles","previous_headings":"Access elevation data from LINZ > Query DEM metadata for elevation","what":"View DEM coverage","title":"Access geospatial data","text":"can view coverage DEM layers see layers intersect lake. First transform lake coordinates NZTM use find layers intersect lake DEM metadata using sf::st_intersects function. two layers intersect lake. quick visual inspection layers see one suitable lake.","code":"# View the coverage of the DEM layers tm_shape(nz_dem_metadata, name = \"DEM coverage\") +   tm_polygons(col = \"red\", border.col = \"black\", alpha = 0.1, id = \"title\") +   tm_shape(pnt, name = \"Lake\") +   tm_markers(popup.vars = \"title\")  #> Warning: The shape DEM coverage is invalid (after reprojection). See #> sf::st_is_valid # Subset the DEM database for the elevation of the lake   pnt_nz <- pnt |>   sf::st_transform(crs = 2193)  # Subset the DEM layers that intersect with the lake dem_layers <- nz_dem_metadata[sf::st_intersects(pnt_nz, nz_dem_metadata,                                                  sparse = FALSE), ] dem_layers[, c(\"title\", \"region\")] #> Simple feature collection with 2 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 1067061 ymin: 4701317 xmax: 2114868 ymax: 6216387 #> Projected CRS: NZGD2000 / New Zealand Transverse Mercator 2000 #>                                     title         region #> 24   NZ 8m Digital Elevation Model (2012)    New Zealand #> 46 Waikato - Hamilton LiDAR 1m DEM (2019) Waikato Region #>                          geometry #> 24 POLYGON ((1473708 5012166, ... #> 46 POLYGON ((1787680 5823600, ... # View the layers dem_84 <- dem_layers |>    sf::st_transform(crs = 4326)   tm_shape(dem_84) +   tm_polygons(col = \"red\", border.col = \"black\", popup.vars = \"title\", alpha = 0.3) +   # tm_borders(col = \"red\", popup.vars = \"title\") +   tm_shape(pnt, name = \"Lake\") +   tm_markers(clustering = FALSE, popup.vars = \"title\") +   tm_view(set.view = c(lon, lat, 7))"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"querying-the-elevation-values","dir":"Articles","previous_headings":"Access elevation data from LINZ","what":"Querying the elevation values","title":"Access geospatial data","text":"raster data, point queries (lat/lon) can sent LINZ API. can query elevation values lake different layers using get_raster_layer_value function. function takes latitude longitude point, layer id raster layer. compare elevation values different layers. discrepancy elevation values two layers. use layer second layer higher resolution (1m) recent data (2019).","code":"# Compare the lake elevation values from the different layers val1 <- get_raster_layer_value(lat = lat, lon = lon,                                 layer = dem_layers$layer_id[1])  val2 <- get_raster_layer_value(lat = lat, lon = lon,                                 layer = dem_layers$layer_id[2])  data.frame(layer = dem_layers$title[1:2], elevation = c(val1, val2)) #>                                    layer elevation #> 1   NZ 8m Digital Elevation Model (2012)    38.000 #> 2 Waikato - Hamilton LiDAR 1m DEM (2019)    36.696"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"download-the-dem-raster-data","dir":"Articles","previous_headings":"Access elevation data from LINZ > Querying the elevation values","what":"Download the DEM raster data","title":"Access geospatial data","text":"can download LiDAR raster data layer plot lake see one works","code":"dem <- get_raster_tile(x = pnt, layer_id = dem_layers$layer_id[2],                        zoom = 18) |>    terra::subset(1) # All colours are the same, so we will subset the first layer #> |---------|---------|---------|---------|=========================================                                           names(dem) <- \"Elevation\"  tm_shape(dem, raster.downsample = FALSE, name = \"LiDAR\") +   tm_raster(style = \"cont\", palette = \"PuOr\", legend.show = TRUE,              title = \"Elevation (m)\")"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"aerial-imagery","dir":"Articles","previous_headings":"Access elevation data from LINZ","what":"Aerial imagery","title":"Access geospatial data","text":"Aerial imagery also available LINZ Data Service. can use view lake surroundings. Within aemetools package, also spatial features (sf) dataframe contains metadata various aerial imagery New Zealand available LINZ Data Service. can use source aerial image lake. can view metadata aerial imagery layers intersect lake. can view coverage aerial imagery layers see layers intersect lake. can download two aerial images lake compare . important note aerial imagery resolution dependent zoom level. higher zoom level, higher resolution. use level 17, higher resolution, longer takes download image. important note even though layers may higher resolution, may need resolution analysis. can compare ","code":"# Query the aerial imagery metadata for the elevation of the lake   # Subset the aerial imagery layers that intersect with the lake aerial_layers <- nz_aerial_imagery_metadata[sf::st_intersects(pnt_nz, nz_aerial_imagery_metadata,                                                  sparse = FALSE), ] aerial_layers #> Simple feature collection with 5 features and 7 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 1734400 ymin: 5643600 xmax: 1921600 ymax: 5971200 #> Projected CRS: NZGD2000 / New Zealand Transverse Mercator 2000 #>     layer_id                                          title #> 114   110193 Hamilton 0.05m Urban Aerial Photos (2020-2021) #> 118   104164       Hamilton 0.1m Urban Aerial Photos (2019) #> 119    88132    Hamilton 0.1m Urban Aerial Photos (2016-17) #> 120   112254   Waikato 0.3m Rural Aerial Photos (2021-2023) #> 121   104600   Waikato 0.3m Rural Aerial Photosabstract #> 114                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Orthophotography of Hamilton City captured in the flying season of 2020-2021. Coverage encompasses urban areas within the Hamilton City District.\\n\\nImagery was captured for Hamilton City Council by AAM NZ Ltd, 6 Ossian St, Napier, New Zealand.\\n\\nData comprises:\\n• 1470 ortho-rectified RGB GeoTIFF images in NZTM projection, tiled into the LINZ Standard 1:1000 tile layout\\n• Tile layout in NZTM projection containing relevant information.\\n\\nThe supplied imagery is in terms of New Zealand Transverse Mercator (NZTM) map projection. Please refer to the tile index layer for specific details, naming conventions, etc.\\n\\nImagery supplied as 5cm pixel resolution (0.05m GSD), 3-band (RGB) uncompressed GeoTIFF. The final spatial accuracy is ±0.15 at 90% confidence level in clear flat areas.\\n\\nIndex tiles for this dataset are available as layer [Hamilton 0.05m Urban Aerial Photos Index Tiles (2020-2021)](http://data.linz.govt.nz/layer/110134) #> 118                                                                                                                                                                                                                                                                                                                                                                                                                                               Orthophotography of Hamilton City taken in the flying seasons (summer period) 2018-2019. Coverage encompassed the urban areas of Hamilton City Council area.\\n\\nImagery was captured for Hamilton City Council by Aerial Surveys Ltd, Unit A1, 8 Saturn Place, Albany,0632, New Zealand.\\n\\nData comprises:\\n•1,472 ortho-rectified RGB GeoTIFF images in NZTM projection, tiled into the LINZ Standard 1:1,000 tile layout\\n•Tile layout in NZTM projection containing relevant information.\\n\\nThe supplied imagery is in terms of New Zealand Transverse Mercator (NZTM) map projection. Please refer to the supplied tile layout shape file for specific details, naming conventions, etc.\\n\\nImagery supplied as 10cm pixel resolution (0.1m GSD), 3-band (RGB) uncompressed GeoTIFF. The final spatial accuracy is ±0.2 m @ 68% confidence level.\\n\\nIndex tiles for this dataset are available as layer [Hamilton 0.1m Urban Aerial Photos Index Tiles (2019)](http://data.linz.govt.nz/layer/104130) #> 119                                                                                                                                                                                                                                                                                                                                                                                                                                    Orthophotography over Hamilton City taken in the flying season (summer period) 2016 -17.\\n\\nImagery was captured for the ‘Hamilton City Council’ by Aerial Surveys Ltd, Unit A1, 8 Saturn Place, Albany,0632, New Zealand.\\n\\nData comprises:\\n•492 ortho-rectified RGB GeoTIFF images in NZTM projection, tiled into the LINZ Standard 1:1,000 tile layout\\n•Tile layout in NZTM projection containing relevant information.\\n\\nThe supplied imagery is in terms of New Zealand Transverse Mercator (NZTM) map projection. The products are tiled into NZTopo50 1:1,000 tiles. Please refer to the supplied tile layout shape file for specific details, naming conventions, etc.\\n\\nImagery supplied as 10cm pixel resolution (0.1m GSD), 3-band (RGB) uncompressed GeoTIFF. The final spatial accuracy is ±0.2 m @ 95% confidence level in clear open spaces.\\n\\nIndex tiles for this dataset are available as layer [Hamilton 0.1m Urban Aerial Photos Index Tiles (2016-17)](http://data.linz.govt.nz/layer/88100) #> 120 **This dataset is the capture completed during the 2020/21, 2021/22 and 2022/23 flying seasons. The total capture for this project to-date is 96.34%. The remaining area is scheduled for capture during the 2023/2024.**\\n\\nOrthophotography within the Waikato Region captured in the summer flying seasons between 2020 and 2023. Coverage encompasses The area of capture is located within the upper North Island and encompasses all or part of 11 territorial authorities. It also includes parts of Bay of Plenty, Hawke's Bay and Manawatū-Whanganui. \\n\\nImagery was captured for Waikato Regional Aerial Photography Service (WRAPS) 2021 by Aerial Surveys Ltd, Unit A1, 8 Saturn Place, Albany 0632, New Zealand.\\n\\nData comprises:\\n• 3620 ortho-rectified RGB GeoTIFF images in NZTM projection, tiled into the LINZ Standard 1:5000 tile layout\\n• Tile layout in NZTM projection containing relevant information.\\n\\nThe supplied imagery is in terms of New Zealand Transverse Mercator (NZTM) map projection. Please refer to the tile index layer for specific details, naming conventions, etc.\\n\\nImagery supplied as 30cm pixel resolution (0.3m GSD), 3-band (RGB) uncompressed GeoTIFF. The final spatial accuracy is ±0.5 at 95% confidence level in clear flat areas.\\n\\nIndex tiles for this dataset are available as layer [Waikato 0.3m Rural Aerial Photos Index Tiles (2021-2023)](http://data.linz.govt.nz/layer/112048) #> 121                                                                                                                                                                                                             Orthophotography over the Waikato Region captured over three flying seasons (summer periods) 2016/2017, 2017/2018, and 2018/2019. The area of capture is located within the upper North Island and encompasses all or part of 11 territorial authorities. It also includes parts of Bay of Plenty, Hawke's Bay and Manawatu-Whanganui.\\n\\nImagery was captured  for the ‘Waikato Regional Aerial Photography Service (WRAPS) 2017 - 2019 ’  by Aerial Surveys Ltd, Unit A1, 8 Saturn Place, Albany,0632, New Zealand.\\n\\nData comprises:\\n•3668 ortho-rectified RGB GeoTIFF images in NZTM projection, tiled into the LINZ Standard 1:5,000 tile layout\\n•Tile layout in NZTM projection containing relevant information.\\n\\nThe supplied imagery is in terms of New Zealand Transverse Mercator (NZTM) map projection. Please refer to the supplied tile layout shape file for specific details, naming conventions, etc.\\n\\nImagery supplied as 30cm pixel resolution (0.30 m GSD), 3-band (RGB) uncompressed GeoTIFF. The final spatial accuracy is ±0.5 m @ 95% confidence level.\\n\\nIndex tiles for this dataset are available as layer [Waikato 0.3m Rural Aerial Photos Index Tiles (2016-2019)](http://data.linz.govt.nz/layer/104585) #>             region  res units year                       geometry #> 114 Waikato Region 0.05     m 2021 POLYGON ((1787680 5819280, ... #> 118 Waikato Region 0.10     m 2019 POLYGON ((1790080 5811360, ... #> 119 Waikato Region 0.10     m 2016 POLYGON ((1791040 5811360, ... #> 120 Waikato Region 0.30     m 2023 MULTIPOLYGON (((1746400 570... #> 121 Waikato Region 0.30     m 2019 MULTIPOLYGON (((1748800 570... aerial_layers # View the coverage of the aerial imagery layers tm_shape(aerial_layers, name = \"Aerial imagery coverage\") +   tm_polygons(col = \"yellow\", border.col = \"black\", alpha = 0.1, id = \"title\") +   tm_shape(pnt, name = \"Lake\") +   tm_markers(popup.vars = \"title\") aerial1 <- get_raster_tile(x = pnt, layer_id = aerial_layers$layer_id[1],                        zoom = 17)  aerial2 <- get_raster_tile(x = pnt, layer_id = aerial_layers$layer_id[4],                        zoom = 17)   tm_shape(aerial1) +   tm_rgb() +   tm_shape(aerial2) +   tm_rgb() #> stars object downsampled to 1052 by 950 cells. See tm_shape manual (argument raster.downsample) #> stars object downsampled to 1052 by 950 cells. See tm_shape manual (argument raster.downsample)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"compare-aerial-imagery-resolution","dir":"Articles","previous_headings":"Access elevation data from LINZ > Aerial imagery","what":"Compare aerial imagery resolution","title":"Access geospatial data","text":"can compare resolution two aerial images see one suitable lake.","code":"# Compare the resolution of the aerial imagery but first transform to NZTM res1 <- aerial1 |>    terra::project(\"+proj=nzmg\") |>    terra::res()  res2 <- aerial2 |>    terra::project(\"+proj=nzmg\") |>    terra::res()  data.frame(layer = aerial_layers$title[c(1, 4)],            resolution = c(res1[1], res2[1])) #>                                            layer resolution #> 1 Hamilton 0.05m Urban Aerial Photos (2020-2021)     0.9426 #> 2   Waikato 0.3m Rural Aerial Photos (2021-2023)     0.9426"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/access-geospatial.html","id":"access-linz-aerial-basemap","dir":"Articles","previous_headings":"Access elevation data from LINZ","what":"Access LINZ Aerial Basemap","title":"Access geospatial data","text":"can also download LINZ Aerial Basemap see coverage lake. need sign free API key use service.","code":"# Get the LINZ basemap linz_basemap <- get_linz_basemap_tile(x = pnt, zoom = 16)  tm_shape(linz_basemap, name = \"LINZ Aerial Basemap\") +   tm_rgb() #> stars object downsampled to 1006 by 993 cells. See tm_shape manual (argument raster.downsample)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Calibrate AEME","text":"First, load AEME aemetools package: Create folder running example calibration setup.","code":"library(AEME) library(aemetools) tmpdir <- \"calib-test\" dir.create(tmpdir, showWarnings = FALSE) aeme_dir <- system.file(\"extdata/lake/\", package = \"AEME\") # Copy files from package into tempdir file.copy(aeme_dir, tmpdir, recursive = TRUE) #> [1] TRUE path <- file.path(tmpdir, \"lake\")  list.files(path, recursive = TRUE) #>  [1] \"aeme.yaml\"            \"data/catchment.dbf\"   \"data/catchment.prj\"   #>  [4] \"data/catchment.shp\"   \"data/catchment.shx\"   \"data/hypsograph.csv\"  #>  [7] \"data/inflow_FWMT.csv\" \"data/lake.dbf\"        \"data/lake.prj\"        #> [10] \"data/lake.shp\"        \"data/lake.shx\"        \"data/lake_obs.csv\"    #> [13] \"data/meteo.csv\"       \"data/outflow.csv\"     \"data/water_level.csv\" #> [16] \"model_controls.csv\""},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"build-aeme-ensemble","dir":"Articles","previous_headings":"","what":"Build AEME ensemble","title":"Calibrate AEME","text":"Using AEME functions, build AEME model setup. example, use glm_aed model. build_aeme function Run model ensemble using run_aeme function make sure current model setup working. Simple plots surface bottom water temperarure lake level running AEME glm_aed model.","code":"aeme <- yaml_to_aeme(path = path, \"aeme.yaml\") model_controls <- AEME::get_model_controls() inf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1) outf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1) model <- c(\"glm_aed\") aeme <- build_aeme(path = path, aeme = aeme,                        model = model, model_controls = model_controls,                        inf_factor = inf_factor, ext_elev = 5,                        use_bgc = FALSE) aeme <- run_aeme(aeme = aeme, model = model, verbose = FALSE,                   path = path) #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:18] #> GLM-AED run successful! [2024-07-12 04:38:19] #> Model run complete![2024-07-12 04:38:19] #> Retrieving and formatting temp for model glm_aed #> Retrieving and formatting salt for model glm_aed plot(aeme)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"load-parameters-to-be-used-for-the-calibration","dir":"Articles","previous_headings":"","what":"Load parameters to be used for the calibration","title":"Calibrate AEME","text":"Parameters loaded aemetools package within aeme_parameters dataframe. parameters stored data frame following columns: model: model name file: file name model parameter file name: parameter name value: parameter value min: minimum value parameter max: maximum value parameter Parameters used calibration. (man) dataframe can modified change parameter values. example, can change light/Kw parameter glm_aed model 0.1: dataframe can passed run_aeme_param function run AEME parameter values specified dataframe. function different run_aeme function return aeme object, model output generate within lake folder.","code":"utils::data(\"aeme_parameters\", package = \"AEME\") aeme_parameters aeme_parameters[aeme_parameters$model == \"glm_aed\" &                   aeme_parameters$name == \"light/Kw\", \"value\"] <- 0.1 aeme_parameters run_aeme_param(aeme = aeme, param = aeme_parameters,                  model = model, path = path) #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:32] #> GLM-AED run successful! [2024-07-12 04:38:33] #> Model run complete![2024-07-12 04:38:33]"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"define-fitness-function","dir":"Articles","previous_headings":"Calibration setup","what":"Define fitness function","title":"Calibrate AEME","text":"First, define function calibration function use calculate fitness model. function takes dataframe argument. dataframe contains observed data (obs) modelled data (model). function return single value. use root mean square error (RMSE) fitness function: RMSE(y,ŷ)=∑=0N−1(yi−ŷ)2N\\text{RMSE}(y, \\hat{y}) = \\sqrt{\\frac{\\sum_{=0}^{N - 1} (y_i - \\hat{y}_i)^2}{N}} Different functions can applied different variables. example, can use RMSE lake level mean absolute error (MAE) water temperature: combined named list functions passed calib_aeme function. named according target variable.","code":"# Function to calculate fitness rmse <- function(df) {   sqrt(mean((df$obs - df$model)^2)) } # Function to calculate fitness mae <- function(df) {   mean(abs(df$obs - df$model)) } # Create list of functions FUN_list <- list(HYD_temp = mae, LKE_lvlwtr = rmse)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"define-control-parameters","dir":"Articles","previous_headings":"Calibration setup","what":"Define control parameters","title":"Calibrate AEME","text":"Next, define control parameters calibration. control parameters generated using create_control funtion passed calib_aeme function. control parameters calibration follows: method used. can either \"calib\" calibration \"sa\" sensitivity analysis. Additional arguments passed function create_control. arguments different calibration sensitivity analysis. arguments common methods: file_type string; file type write output . Options c(\"csv\", \"db\"). Defaults \"db\". file_name string; file name write output . Defaults \"results.db\" file_type \"db\" \"simulation_metadata.csv\" file_type \"csv\". na_value value replace NA values observations. Defaults 999. parallel boolean; run calibration parallel. Default TRUE ncore: number cores use calibration. used parallel = TRUE. Default parallel::detectCores() - 1. calibration, arguments : VTR Value reached. optimization process stop either maximum number iterations itermax reached best parameter vector bestmem found value fn(bestmem) <= VTR. Default -Inf. NP number population members. Defaults NA; user change value NP NA reset 10 * sum(param$model == model). many  problems best set NP least 10 times length parameter vector. itermax maximum iteration (population generation) allowed. Default 200. reltol relative convergence tolerance. algorithm stops unable reduce value factor reltol * (abs(val) + reltol). Default = 0.07 cutoff: quantile cutoff used select parents next generation. example, cutoff = 0.25, best 25% population used parents next generation. mutate fraction population undergo mutation (0-1). c_method character; method use calibration. Options \"CMAES\" \"LHC\". Defaults \"CMAES\". sensitivity analysis, arguments : N: initial sample size base sample matrix. vars_sim: named list output variables sensitivity analysis. name user defined list must contain: var: variable name use sensitivity analysis. month: vector months use sensitivity analysis. depth_range: vector length 2 minimum maximum depth range use sensitivity analysis. example control parameters:","code":"?create_control ctrl <- create_control(method = \"calib\", VTR = 1, NP = 40, itermax = 400,                         reltol = 0.07, cutoff = 0.25, mutate = 0.1,                         parallel = FALSE, file_type = \"csv\",                         na_value = 999, ncore = 2)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"define-variables","dir":"Articles","previous_headings":"Calibration setup","what":"Define variables","title":"Calibrate AEME","text":"Next select variables use calibration. variables selected need use AEME variable definition e.g. c(\"HYD_temp\", \"LKE_lvlwtr\"). Weights need attributed variables. weights used scale fitness value. can helpful variables different units. example, temperature degrees Celsius water level metres, water level much larger impact fitness value. Therefore, weight water level much smaller weight temperature. weights specified named vector. names vector variable names.","code":"vars_sim <- c(\"HYD_temp\", \"LKE_lvlwtr\") weights <- c(\"HYD_temp\" = 1, \"LKE_lvlwtr\" = 0.1)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"run-calibration","dir":"Articles","previous_headings":"","what":"Run calibration","title":"Calibrate AEME","text":"defined fitness function, control parameters variables, can run calibration. calib_aeme function takes following arguments: aeme; object. filepath; input files located relative 'config'. dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") string; model calibrate. one model can passed. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\"). dataframe; configuration loaded \"model_controls.csv\". vector; variables names used calculation model fit. Currently supports using one variable. list functions; named according variables vars_sim. Funtions form ⁠function(df)⁠ used calculate model fit. NULL, uses mean absolute error (MAE). list; controls sensitivity analysis function created using create_control function. See create_control details. vector; weights variable vars_sim. Default c(1). dataframe; parameters used calibration. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\"). used restart previous calibration. calib_aeme function writes calibration results file specified generation. allows calibration stopped restarted time. calib_aeme function returns ctrl object updated values.","code":"?calib_aeme sim_id <- calib_aeme(aeme = aeme, path = path,                      param = aeme_parameters, model = model,                      FUN_list = FUN_list, ctrl = ctrl,                       vars_sim = vars_sim, weights = weights) #> Extracting indices for glm_aed modelled variables [2024-07-12 04:38:34] #> Completed glm_aed! [2024-07-12 04:38:35] #> Starting generation 1/10, 40 members. [2024-07-12 04:38:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:35] #> GLM-AED run successful! [2024-07-12 04:38:35] #> Model run complete![2024-07-12 04:38:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:36] #> GLM-AED run successful! [2024-07-12 04:38:36] #> Model run complete![2024-07-12 04:38:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:37] #> GLM-AED run successful! [2024-07-12 04:38:37] #> Model run complete![2024-07-12 04:38:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:38] #> GLM-AED run successful! [2024-07-12 04:38:38] #> Model run complete![2024-07-12 04:38:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:38] #> GLM-AED run successful! [2024-07-12 04:38:39] #> Model run complete![2024-07-12 04:38:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:39] #> GLM-AED run successful! [2024-07-12 04:38:40] #> Model run complete![2024-07-12 04:38:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:40] #> GLM-AED run successful! [2024-07-12 04:38:41] #> Model run complete![2024-07-12 04:38:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:41] #> GLM-AED run successful! [2024-07-12 04:38:42] #> Model run complete![2024-07-12 04:38:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:42] #> GLM-AED run successful! [2024-07-12 04:38:43] #> Model run complete![2024-07-12 04:38:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:43] #> GLM-AED run successful! [2024-07-12 04:38:44] #> Model run complete![2024-07-12 04:38:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:44] #> GLM-AED run successful! [2024-07-12 04:38:45] #> Model run complete![2024-07-12 04:38:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:45] #> GLM-AED run successful! [2024-07-12 04:38:46] #> Model run complete![2024-07-12 04:38:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:46] #> GLM-AED run successful! [2024-07-12 04:38:47] #> Model run complete![2024-07-12 04:38:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:47] #> GLM-AED run successful! [2024-07-12 04:38:48] #> Model run complete![2024-07-12 04:38:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:48] #> GLM-AED run successful! [2024-07-12 04:38:49] #> Model run complete![2024-07-12 04:38:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:49] #> GLM-AED run successful! [2024-07-12 04:38:49] #> Model run complete![2024-07-12 04:38:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:50] #> GLM-AED run successful! [2024-07-12 04:38:50] #> Model run complete![2024-07-12 04:38:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:50] #> GLM-AED run successful! [2024-07-12 04:38:51] #> Model run complete![2024-07-12 04:38:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:51] #> GLM-AED run successful! [2024-07-12 04:38:52] #> Model run complete![2024-07-12 04:38:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:52] #> GLM-AED run successful! [2024-07-12 04:38:53] #> Model run complete![2024-07-12 04:38:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:53] #> GLM-AED run successful! [2024-07-12 04:38:54] #> Model run complete![2024-07-12 04:38:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:54] #> GLM-AED run successful! [2024-07-12 04:38:54] #> Model run complete![2024-07-12 04:38:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:55] #> GLM-AED run successful! [2024-07-12 04:38:55] #> Model run complete![2024-07-12 04:38:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:56] #> GLM-AED run successful! [2024-07-12 04:38:57] #> Model run complete![2024-07-12 04:38:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:57] #> GLM-AED run successful! [2024-07-12 04:38:57] #> Model run complete![2024-07-12 04:38:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:58] #> GLM-AED run successful! [2024-07-12 04:38:58] #> Model run complete![2024-07-12 04:38:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:58] #> GLM-AED run successful! [2024-07-12 04:38:59] #> Model run complete![2024-07-12 04:38:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:38:59] #> GLM-AED run successful! [2024-07-12 04:39:00] #> Model run complete![2024-07-12 04:39:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:00] #> GLM-AED run successful! [2024-07-12 04:39:01] #> Model run complete![2024-07-12 04:39:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:01] #> GLM-AED run successful! [2024-07-12 04:39:02] #> Model run complete![2024-07-12 04:39:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:02] #> GLM-AED run successful! [2024-07-12 04:39:03] #> Model run complete![2024-07-12 04:39:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:03] #> GLM-AED run successful! [2024-07-12 04:39:04] #> Model run complete![2024-07-12 04:39:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:04] #> GLM-AED run successful! [2024-07-12 04:39:05] #> Model run complete![2024-07-12 04:39:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:05] #> GLM-AED run successful! [2024-07-12 04:39:06] #> Model run complete![2024-07-12 04:39:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:06] #> Model run complete![2024-07-12 04:39:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:06] #> GLM-AED run successful! [2024-07-12 04:39:07] #> Model run complete![2024-07-12 04:39:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:07] #> GLM-AED run successful! [2024-07-12 04:39:08] #> Model run complete![2024-07-12 04:39:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:08] #> GLM-AED run successful! [2024-07-12 04:39:09] #> Model run complete![2024-07-12 04:39:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:09] #> GLM-AED run successful! [2024-07-12 04:39:10] #> Model run complete![2024-07-12 04:39:10] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:10] #> GLM-AED run successful! [2024-07-12 04:39:11] #> Model run complete![2024-07-12 04:39:11] #> Best fit: 1.55 (sd: 437) #>             Parameters: [0.958, 1.29, 0.995, 0.117, 0.235, 0.127, 0.374, 0.576, 1.13, 0.957] #> Writing output for generation 1 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:39:11] #> Survival rate: 0.75 #> Starting generation 2/10, 40 members. [2024-07-12 04:39:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:12] #> GLM-AED run successful! [2024-07-12 04:39:12] #> Model run complete![2024-07-12 04:39:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:13] #> GLM-AED run successful! [2024-07-12 04:39:13] #> Model run complete![2024-07-12 04:39:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:14] #> GLM-AED run successful! [2024-07-12 04:39:14] #> Model run complete![2024-07-12 04:39:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:15] #> GLM-AED run successful! [2024-07-12 04:39:15] #> Model run complete![2024-07-12 04:39:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:16] #> GLM-AED run successful! [2024-07-12 04:39:16] #> Model run complete![2024-07-12 04:39:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:17] #> GLM-AED run successful! [2024-07-12 04:39:17] #> Model run complete![2024-07-12 04:39:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:17] #> GLM-AED run successful! [2024-07-12 04:39:18] #> Model run complete![2024-07-12 04:39:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:18] #> GLM-AED run successful! [2024-07-12 04:39:19] #> Model run complete![2024-07-12 04:39:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:19] #> GLM-AED run successful! [2024-07-12 04:39:20] #> Model run complete![2024-07-12 04:39:20] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:20] #> GLM-AED run successful! [2024-07-12 04:39:21] #> Model run complete![2024-07-12 04:39:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:21] #> GLM-AED run successful! [2024-07-12 04:39:22] #> Model run complete![2024-07-12 04:39:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:22] #> GLM-AED run successful! [2024-07-12 04:39:23] #> Model run complete![2024-07-12 04:39:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:23] #> GLM-AED run successful! [2024-07-12 04:39:24] #> Model run complete![2024-07-12 04:39:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:24] #> GLM-AED run successful! [2024-07-12 04:39:25] #> Model run complete![2024-07-12 04:39:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:25] #> GLM-AED run successful! [2024-07-12 04:39:26] #> Model run complete![2024-07-12 04:39:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:26] #> GLM-AED run successful! [2024-07-12 04:39:27] #> Model run complete![2024-07-12 04:39:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:27] #> GLM-AED run successful! [2024-07-12 04:39:27] #> Model run complete![2024-07-12 04:39:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:28] #> GLM-AED run successful! [2024-07-12 04:39:28] #> Model run complete![2024-07-12 04:39:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:28] #> GLM-AED run successful! [2024-07-12 04:39:29] #> Model run complete![2024-07-12 04:39:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:29] #> GLM-AED run successful! [2024-07-12 04:39:30] #> Model run complete![2024-07-12 04:39:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:30] #> GLM-AED run successful! [2024-07-12 04:39:31] #> Model run complete![2024-07-12 04:39:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:32] #> GLM-AED run successful! [2024-07-12 04:39:32] #> Model run complete![2024-07-12 04:39:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:32] #> GLM-AED run successful! [2024-07-12 04:39:33] #> Model run complete![2024-07-12 04:39:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:33] #> GLM-AED run successful! [2024-07-12 04:39:34] #> Model run complete![2024-07-12 04:39:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:34] #> GLM-AED run successful! [2024-07-12 04:39:35] #> Model run complete![2024-07-12 04:39:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:35] #> GLM-AED run successful! [2024-07-12 04:39:36] #> Model run complete![2024-07-12 04:39:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:36] #> GLM-AED run successful! [2024-07-12 04:39:37] #> Model run complete![2024-07-12 04:39:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:37] #> GLM-AED run successful! [2024-07-12 04:39:38] #> Model run complete![2024-07-12 04:39:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:38] #> GLM-AED run successful! [2024-07-12 04:39:39] #> Model run complete![2024-07-12 04:39:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:39] #> GLM-AED run successful! [2024-07-12 04:39:40] #> Model run complete![2024-07-12 04:39:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:40] #> GLM-AED run successful! [2024-07-12 04:39:41] #> Model run complete![2024-07-12 04:39:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:41] #> GLM-AED run successful! [2024-07-12 04:39:42] #> Model run complete![2024-07-12 04:39:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:42] #> GLM-AED run successful! [2024-07-12 04:39:43] #> Model run complete![2024-07-12 04:39:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:43] #> GLM-AED run successful! [2024-07-12 04:39:44] #> Model run complete![2024-07-12 04:39:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:44] #> GLM-AED run successful! [2024-07-12 04:39:45] #> Model run complete![2024-07-12 04:39:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:45] #> GLM-AED run successful! [2024-07-12 04:39:46] #> Model run complete![2024-07-12 04:39:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:46] #> GLM-AED run successful! [2024-07-12 04:39:47] #> Model run complete![2024-07-12 04:39:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:47] #> GLM-AED run successful! [2024-07-12 04:39:48] #> Model run complete![2024-07-12 04:39:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:48] #> GLM-AED run successful! [2024-07-12 04:39:48] #> Model run complete![2024-07-12 04:39:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:49] #> GLM-AED run successful! [2024-07-12 04:39:49] #> Model run complete![2024-07-12 04:39:49] #> Writing output for generation 2 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:39:49] #> Best fit: 1.2871 (sd: 220.07) #> Survival rate: 0.75 #> Starting generation 3/10, 40 members. [2024-07-12 04:39:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:49] #> GLM-AED run successful! [2024-07-12 04:39:50] #> Model run complete![2024-07-12 04:39:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:50] #> GLM-AED run successful! [2024-07-12 04:39:51] #> Model run complete![2024-07-12 04:39:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:51] #> GLM-AED run successful! [2024-07-12 04:39:52] #> Model run complete![2024-07-12 04:39:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:52] #> GLM-AED run successful! [2024-07-12 04:39:53] #> Model run complete![2024-07-12 04:39:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:53] #> GLM-AED run successful! [2024-07-12 04:39:54] #> Model run complete![2024-07-12 04:39:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:54] #> GLM-AED run successful! [2024-07-12 04:39:55] #> Model run complete![2024-07-12 04:39:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:55] #> GLM-AED run successful! [2024-07-12 04:39:56] #> Model run complete![2024-07-12 04:39:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:56] #> GLM-AED run successful! [2024-07-12 04:39:57] #> Model run complete![2024-07-12 04:39:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:57] #> GLM-AED run successful! [2024-07-12 04:39:58] #> Model run complete![2024-07-12 04:39:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:58] #> GLM-AED run successful! [2024-07-12 04:39:59] #> Model run complete![2024-07-12 04:39:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:39:59] #> GLM-AED run successful! [2024-07-12 04:40:00] #> Model run complete![2024-07-12 04:40:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:00] #> GLM-AED run successful! [2024-07-12 04:40:01] #> Model run complete![2024-07-12 04:40:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:01] #> GLM-AED run successful! [2024-07-12 04:40:02] #> Model run complete![2024-07-12 04:40:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:02] #> GLM-AED run successful! [2024-07-12 04:40:02] #> Model run complete![2024-07-12 04:40:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:03] #> GLM-AED run successful! [2024-07-12 04:40:03] #> Model run complete![2024-07-12 04:40:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:04] #> GLM-AED run successful! [2024-07-12 04:40:04] #> Model run complete![2024-07-12 04:40:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:04] #> GLM-AED run successful! [2024-07-12 04:40:05] #> Model run complete![2024-07-12 04:40:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:05] #> GLM-AED run successful! [2024-07-12 04:40:06] #> Model run complete![2024-07-12 04:40:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:06] #> GLM-AED run successful! [2024-07-12 04:40:07] #> Model run complete![2024-07-12 04:40:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:07] #> GLM-AED run successful! [2024-07-12 04:40:08] #> Model run complete![2024-07-12 04:40:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:08] #> GLM-AED run successful! [2024-07-12 04:40:09] #> Model run complete![2024-07-12 04:40:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:09] #> GLM-AED run successful! [2024-07-12 04:40:10] #> Model run complete![2024-07-12 04:40:10] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:10] #> GLM-AED run successful! [2024-07-12 04:40:11] #> Model run complete![2024-07-12 04:40:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:11] #> GLM-AED run successful! [2024-07-12 04:40:12] #> Model run complete![2024-07-12 04:40:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:12] #> GLM-AED run successful! [2024-07-12 04:40:13] #> Model run complete![2024-07-12 04:40:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:13] #> GLM-AED run successful! [2024-07-12 04:40:14] #> Model run complete![2024-07-12 04:40:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:14] #> GLM-AED run successful! [2024-07-12 04:40:15] #> Model run complete![2024-07-12 04:40:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:15] #> GLM-AED run successful! [2024-07-12 04:40:16] #> Model run complete![2024-07-12 04:40:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:16] #> GLM-AED run successful! [2024-07-12 04:40:17] #> Model run complete![2024-07-12 04:40:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:17] #> GLM-AED run successful! [2024-07-12 04:40:18] #> Model run complete![2024-07-12 04:40:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:18] #> GLM-AED run successful! [2024-07-12 04:40:19] #> Model run complete![2024-07-12 04:40:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:19] #> GLM-AED run successful! [2024-07-12 04:40:20] #> Model run complete![2024-07-12 04:40:20] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:20] #> GLM-AED run successful! [2024-07-12 04:40:21] #> Model run complete![2024-07-12 04:40:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:21] #> GLM-AED run successful! [2024-07-12 04:40:21] #> Model run complete![2024-07-12 04:40:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:22] #> GLM-AED run successful! [2024-07-12 04:40:22] #> Model run complete![2024-07-12 04:40:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:23] #> GLM-AED run successful! [2024-07-12 04:40:23] #> Model run complete![2024-07-12 04:40:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:24] #> GLM-AED run successful! [2024-07-12 04:40:24] #> Model run complete![2024-07-12 04:40:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:25] #> GLM-AED run successful! [2024-07-12 04:40:25] #> Model run complete![2024-07-12 04:40:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:25] #> GLM-AED run successful! [2024-07-12 04:40:26] #> Model run complete![2024-07-12 04:40:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:26] #> GLM-AED run successful! [2024-07-12 04:40:27] #> Model run complete![2024-07-12 04:40:27] #> Writing output for generation 3 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:40:27] #> Best fit: 1.2871 (sd: 265.99) #> Survival rate: 0.75 #> Starting generation 4/10, 40 members. [2024-07-12 04:40:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:27] #> GLM-AED run successful! [2024-07-12 04:40:28] #> Model run complete![2024-07-12 04:40:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:29] #> GLM-AED run successful! [2024-07-12 04:40:29] #> Model run complete![2024-07-12 04:40:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:30] #> GLM-AED run successful! [2024-07-12 04:40:30] #> Model run complete![2024-07-12 04:40:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:30] #> GLM-AED run successful! [2024-07-12 04:40:31] #> Model run complete![2024-07-12 04:40:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:31] #> GLM-AED run successful! [2024-07-12 04:40:32] #> Model run complete![2024-07-12 04:40:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:33] #> GLM-AED run successful! [2024-07-12 04:40:33] #> Model run complete![2024-07-12 04:40:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:34] #> GLM-AED run successful! [2024-07-12 04:40:34] #> Model run complete![2024-07-12 04:40:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:34] #> GLM-AED run successful! [2024-07-12 04:40:35] #> Model run complete![2024-07-12 04:40:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:35] #> GLM-AED run successful! [2024-07-12 04:40:36] #> Model run complete![2024-07-12 04:40:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:37] #> GLM-AED run successful! [2024-07-12 04:40:37] #> Model run complete![2024-07-12 04:40:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:38] #> GLM-AED run successful! [2024-07-12 04:40:38] #> Model run complete![2024-07-12 04:40:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:39] #> GLM-AED run successful! [2024-07-12 04:40:39] #> Model run complete![2024-07-12 04:40:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:40] #> GLM-AED run successful! [2024-07-12 04:40:41] #> Model run complete![2024-07-12 04:40:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:41] #> GLM-AED run successful! [2024-07-12 04:40:42] #> Model run complete![2024-07-12 04:40:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:42] #> GLM-AED run successful! [2024-07-12 04:40:42] #> Model run complete![2024-07-12 04:40:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:43] #> GLM-AED run successful! [2024-07-12 04:40:43] #> Model run complete![2024-07-12 04:40:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:43] #> GLM-AED run successful! [2024-07-12 04:40:44] #> Model run complete![2024-07-12 04:40:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:45] #> GLM-AED run successful! [2024-07-12 04:40:45] #> Model run complete![2024-07-12 04:40:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:45] #> GLM-AED run successful! [2024-07-12 04:40:46] #> Model run complete![2024-07-12 04:40:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:46] #> GLM-AED run successful! [2024-07-12 04:40:47] #> Model run complete![2024-07-12 04:40:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:47] #> GLM-AED run successful! [2024-07-12 04:40:48] #> Model run complete![2024-07-12 04:40:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:48] #> GLM-AED run successful! [2024-07-12 04:40:49] #> Model run complete![2024-07-12 04:40:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:49] #> GLM-AED run successful! [2024-07-12 04:40:50] #> Model run complete![2024-07-12 04:40:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:50] #> GLM-AED run successful! [2024-07-12 04:40:51] #> Model run complete![2024-07-12 04:40:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:51] #> GLM-AED run successful! [2024-07-12 04:40:52] #> Model run complete![2024-07-12 04:40:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:52] #> GLM-AED run successful! [2024-07-12 04:40:53] #> Model run complete![2024-07-12 04:40:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:53] #> GLM-AED run successful! [2024-07-12 04:40:54] #> Model run complete![2024-07-12 04:40:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:54] #> GLM-AED run successful! [2024-07-12 04:40:55] #> Model run complete![2024-07-12 04:40:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:55] #> GLM-AED run successful! [2024-07-12 04:40:56] #> Model run complete![2024-07-12 04:40:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:56] #> GLM-AED run successful! [2024-07-12 04:40:56] #> Model run complete![2024-07-12 04:40:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:57] #> GLM-AED run successful! [2024-07-12 04:40:57] #> Model run complete![2024-07-12 04:40:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:58] #> GLM-AED run successful! [2024-07-12 04:40:58] #> Model run complete![2024-07-12 04:40:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:59] #> GLM-AED run successful! [2024-07-12 04:40:59] #> Model run complete![2024-07-12 04:40:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:40:59] #> GLM-AED run successful! [2024-07-12 04:41:00] #> Model run complete![2024-07-12 04:41:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:00] #> GLM-AED run successful! [2024-07-12 04:41:01] #> Model run complete![2024-07-12 04:41:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:01] #> GLM-AED run successful! [2024-07-12 04:41:02] #> Model run complete![2024-07-12 04:41:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:02] #> GLM-AED run successful! [2024-07-12 04:41:03] #> Model run complete![2024-07-12 04:41:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:03] #> GLM-AED run successful! [2024-07-12 04:41:04] #> Model run complete![2024-07-12 04:41:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:04] #> GLM-AED run successful! [2024-07-12 04:41:05] #> Model run complete![2024-07-12 04:41:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:05] #> GLM-AED run successful! [2024-07-12 04:41:06] #> Model run complete![2024-07-12 04:41:06] #> Writing output for generation 4 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:41:06] #> Best fit: 1.2871 (sd: 220.08) #> Survival rate: 0.75 #> Starting generation 5/10, 40 members. [2024-07-12 04:41:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:06] #> GLM-AED run successful! [2024-07-12 04:41:07] #> Model run complete![2024-07-12 04:41:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:07] #> GLM-AED run successful! [2024-07-12 04:41:08] #> Model run complete![2024-07-12 04:41:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:08] #> GLM-AED run successful! [2024-07-12 04:41:09] #> Model run complete![2024-07-12 04:41:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:09] #> GLM-AED run successful! [2024-07-12 04:41:10] #> Model run complete![2024-07-12 04:41:10] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:10] #> GLM-AED run successful! [2024-07-12 04:41:11] #> Model run complete![2024-07-12 04:41:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:11] #> GLM-AED run successful! [2024-07-12 04:41:12] #> Model run complete![2024-07-12 04:41:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:12] #> GLM-AED run successful! [2024-07-12 04:41:13] #> Model run complete![2024-07-12 04:41:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:13] #> GLM-AED run successful! [2024-07-12 04:41:14] #> Model run complete![2024-07-12 04:41:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:14] #> GLM-AED run successful! [2024-07-12 04:41:15] #> Model run complete![2024-07-12 04:41:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:15] #> GLM-AED run successful! [2024-07-12 04:41:16] #> Model run complete![2024-07-12 04:41:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:16] #> GLM-AED run successful! [2024-07-12 04:41:16] #> Model run complete![2024-07-12 04:41:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:17] #> GLM-AED run successful! [2024-07-12 04:41:17] #> Model run complete![2024-07-12 04:41:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:18] #> GLM-AED run successful! [2024-07-12 04:41:18] #> Model run complete![2024-07-12 04:41:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:19] #> GLM-AED run successful! [2024-07-12 04:41:19] #> Model run complete![2024-07-12 04:41:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:20] #> GLM-AED run successful! [2024-07-12 04:41:21] #> Model run complete![2024-07-12 04:41:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:21] #> GLM-AED run successful! [2024-07-12 04:41:22] #> Model run complete![2024-07-12 04:41:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:22] #> GLM-AED run successful! [2024-07-12 04:41:23] #> Model run complete![2024-07-12 04:41:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:23] #> GLM-AED run successful! [2024-07-12 04:41:24] #> Model run complete![2024-07-12 04:41:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:24] #> GLM-AED run successful! [2024-07-12 04:41:25] #> Model run complete![2024-07-12 04:41:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:25] #> GLM-AED run successful! [2024-07-12 04:41:26] #> Model run complete![2024-07-12 04:41:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:26] #> GLM-AED run successful! [2024-07-12 04:41:27] #> Model run complete![2024-07-12 04:41:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:27] #> GLM-AED run successful! [2024-07-12 04:41:27] #> Model run complete![2024-07-12 04:41:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:28] #> GLM-AED run successful! [2024-07-12 04:41:28] #> Model run complete![2024-07-12 04:41:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:29] #> GLM-AED run successful! [2024-07-12 04:41:29] #> Model run complete![2024-07-12 04:41:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:30] #> GLM-AED run successful! [2024-07-12 04:41:30] #> Model run complete![2024-07-12 04:41:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:31] #> GLM-AED run successful! [2024-07-12 04:41:31] #> Model run complete![2024-07-12 04:41:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:31] #> GLM-AED run successful! [2024-07-12 04:41:32] #> Model run complete![2024-07-12 04:41:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:32] #> GLM-AED run successful! [2024-07-12 04:41:33] #> Model run complete![2024-07-12 04:41:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:33] #> GLM-AED run successful! [2024-07-12 04:41:34] #> Model run complete![2024-07-12 04:41:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:34] #> GLM-AED run successful! [2024-07-12 04:41:35] #> Model run complete![2024-07-12 04:41:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:35] #> GLM-AED run successful! [2024-07-12 04:41:35] #> Model run complete![2024-07-12 04:41:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:36] #> GLM-AED run successful! [2024-07-12 04:41:36] #> Model run complete![2024-07-12 04:41:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:37] #> GLM-AED run successful! [2024-07-12 04:41:38] #> Model run complete![2024-07-12 04:41:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:38] #> GLM-AED run successful! [2024-07-12 04:41:39] #> Model run complete![2024-07-12 04:41:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:39] #> GLM-AED run successful! [2024-07-12 04:41:40] #> Model run complete![2024-07-12 04:41:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:40] #> GLM-AED run successful! [2024-07-12 04:41:40] #> Model run complete![2024-07-12 04:41:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:41] #> GLM-AED run successful! [2024-07-12 04:41:42] #> Model run complete![2024-07-12 04:41:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:42] #> GLM-AED run successful! [2024-07-12 04:41:42] #> Model run complete![2024-07-12 04:41:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:43] #> GLM-AED run successful! [2024-07-12 04:41:43] #> Model run complete![2024-07-12 04:41:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:44] #> GLM-AED run successful! [2024-07-12 04:41:44] #> Model run complete![2024-07-12 04:41:44] #> Writing output for generation 5 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:41:44] #> Best fit: 1.2871 (sd: 157.65) #> Survival rate: 0.75 #> Starting generation 6/10, 40 members. [2024-07-12 04:41:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:45] #> GLM-AED run successful! [2024-07-12 04:41:45] #> Model run complete![2024-07-12 04:41:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:46] #> GLM-AED run successful! [2024-07-12 04:41:46] #> Model run complete![2024-07-12 04:41:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:46] #> GLM-AED run successful! [2024-07-12 04:41:47] #> Model run complete![2024-07-12 04:41:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:47] #> GLM-AED run successful! [2024-07-12 04:41:48] #> Model run complete![2024-07-12 04:41:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:48] #> GLM-AED run successful! [2024-07-12 04:41:49] #> Model run complete![2024-07-12 04:41:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:49] #> GLM-AED run successful! [2024-07-12 04:41:50] #> Model run complete![2024-07-12 04:41:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:51] #> GLM-AED run successful! [2024-07-12 04:41:51] #> Model run complete![2024-07-12 04:41:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:52] #> GLM-AED run successful! [2024-07-12 04:41:52] #> Model run complete![2024-07-12 04:41:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:52] #> GLM-AED run successful! [2024-07-12 04:41:53] #> Model run complete![2024-07-12 04:41:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:53] #> GLM-AED run successful! [2024-07-12 04:41:54] #> Model run complete![2024-07-12 04:41:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:54] #> GLM-AED run successful! [2024-07-12 04:41:55] #> Model run complete![2024-07-12 04:41:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:55] #> GLM-AED run successful! [2024-07-12 04:41:56] #> Model run complete![2024-07-12 04:41:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:56] #> GLM-AED run successful! [2024-07-12 04:41:57] #> Model run complete![2024-07-12 04:41:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:57] #> GLM-AED run successful! [2024-07-12 04:41:58] #> Model run complete![2024-07-12 04:41:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:58] #> GLM-AED run successful! [2024-07-12 04:41:59] #> Model run complete![2024-07-12 04:41:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:41:59] #> GLM-AED run successful! [2024-07-12 04:42:00] #> Model run complete![2024-07-12 04:42:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:00] #> GLM-AED run successful! [2024-07-12 04:42:01] #> Model run complete![2024-07-12 04:42:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:01] #> GLM-AED run successful! [2024-07-12 04:42:02] #> Model run complete![2024-07-12 04:42:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:02] #> GLM-AED run successful! [2024-07-12 04:42:02] #> Model run complete![2024-07-12 04:42:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:03] #> GLM-AED run successful! [2024-07-12 04:42:03] #> Model run complete![2024-07-12 04:42:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:03] #> GLM-AED run successful! [2024-07-12 04:42:04] #> Model run complete![2024-07-12 04:42:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:04] #> GLM-AED run successful! [2024-07-12 04:42:05] #> Model run complete![2024-07-12 04:42:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:05] #> GLM-AED run successful! [2024-07-12 04:42:06] #> Model run complete![2024-07-12 04:42:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:06] #> GLM-AED run successful! [2024-07-12 04:42:07] #> Model run complete![2024-07-12 04:42:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:07] #> GLM-AED run successful! [2024-07-12 04:42:08] #> Model run complete![2024-07-12 04:42:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:08] #> GLM-AED run successful! [2024-07-12 04:42:09] #> Model run complete![2024-07-12 04:42:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:09] #> GLM-AED run successful! [2024-07-12 04:42:10] #> Model run complete![2024-07-12 04:42:10] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:10] #> GLM-AED run successful! [2024-07-12 04:42:11] #> Model run complete![2024-07-12 04:42:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:11] #> GLM-AED run successful! [2024-07-12 04:42:12] #> Model run complete![2024-07-12 04:42:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:12] #> GLM-AED run successful! [2024-07-12 04:42:12] #> Model run complete![2024-07-12 04:42:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:13] #> GLM-AED run successful! [2024-07-12 04:42:13] #> Model run complete![2024-07-12 04:42:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:14] #> GLM-AED run successful! [2024-07-12 04:42:14] #> Model run complete![2024-07-12 04:42:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:15] #> GLM-AED run successful! [2024-07-12 04:42:15] #> Model run complete![2024-07-12 04:42:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:16] #> GLM-AED run successful! [2024-07-12 04:42:16] #> Model run complete![2024-07-12 04:42:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:17] #> GLM-AED run successful! [2024-07-12 04:42:17] #> Model run complete![2024-07-12 04:42:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:17] #> GLM-AED run successful! [2024-07-12 04:42:18] #> Model run complete![2024-07-12 04:42:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:18] #> GLM-AED run successful! [2024-07-12 04:42:19] #> Model run complete![2024-07-12 04:42:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:19] #> GLM-AED run successful! [2024-07-12 04:42:20] #> Model run complete![2024-07-12 04:42:20] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:20] #> GLM-AED run successful! [2024-07-12 04:42:21] #> Model run complete![2024-07-12 04:42:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:21] #> GLM-AED run successful! [2024-07-12 04:42:22] #> Model run complete![2024-07-12 04:42:22] #> Writing output for generation 6 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:42:22] #> Best fit: 1.2871 (sd: 265.99) #> Survival rate: 0.75 #> Starting generation 7/10, 40 members. [2024-07-12 04:42:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:22] #> GLM-AED run successful! [2024-07-12 04:42:23] #> Model run complete![2024-07-12 04:42:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:23] #> GLM-AED run successful! [2024-07-12 04:42:24] #> Model run complete![2024-07-12 04:42:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:24] #> GLM-AED run successful! [2024-07-12 04:42:25] #> Model run complete![2024-07-12 04:42:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:25] #> GLM-AED run successful! [2024-07-12 04:42:25] #> Model run complete![2024-07-12 04:42:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:26] #> GLM-AED run successful! [2024-07-12 04:42:26] #> Model run complete![2024-07-12 04:42:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:27] #> GLM-AED run successful! [2024-07-12 04:42:27] #> Model run complete![2024-07-12 04:42:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:28] #> GLM-AED run successful! [2024-07-12 04:42:28] #> Model run complete![2024-07-12 04:42:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:28] #> GLM-AED run successful! [2024-07-12 04:42:29] #> Model run complete![2024-07-12 04:42:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:29] #> GLM-AED run successful! [2024-07-12 04:42:30] #> Model run complete![2024-07-12 04:42:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:30] #> GLM-AED run successful! [2024-07-12 04:42:31] #> Model run complete![2024-07-12 04:42:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:31] #> GLM-AED run successful! [2024-07-12 04:42:32] #> Model run complete![2024-07-12 04:42:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:32] #> GLM-AED run successful! [2024-07-12 04:42:33] #> Model run complete![2024-07-12 04:42:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:33] #> GLM-AED run successful! [2024-07-12 04:42:34] #> Model run complete![2024-07-12 04:42:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:34] #> GLM-AED run successful! [2024-07-12 04:42:34] #> Model run complete![2024-07-12 04:42:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:35] #> GLM-AED run successful! [2024-07-12 04:42:35] #> Model run complete![2024-07-12 04:42:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:36] #> GLM-AED run successful! [2024-07-12 04:42:36] #> Model run complete![2024-07-12 04:42:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:36] #> GLM-AED run successful! [2024-07-12 04:42:37] #> Model run complete![2024-07-12 04:42:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:37] #> GLM-AED run successful! [2024-07-12 04:42:38] #> Model run complete![2024-07-12 04:42:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:38] #> GLM-AED run successful! [2024-07-12 04:42:39] #> Model run complete![2024-07-12 04:42:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:39] #> GLM-AED run successful! [2024-07-12 04:42:40] #> Model run complete![2024-07-12 04:42:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:40] #> GLM-AED run successful! [2024-07-12 04:42:41] #> Model run complete![2024-07-12 04:42:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:41] #> GLM-AED run successful! [2024-07-12 04:42:42] #> Model run complete![2024-07-12 04:42:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:42] #> GLM-AED run successful! [2024-07-12 04:42:43] #> Model run complete![2024-07-12 04:42:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:43] #> GLM-AED run successful! [2024-07-12 04:42:44] #> Model run complete![2024-07-12 04:42:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:44] #> GLM-AED run successful! [2024-07-12 04:42:45] #> Model run complete![2024-07-12 04:42:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:45] #> GLM-AED run successful! [2024-07-12 04:42:46] #> Model run complete![2024-07-12 04:42:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:46] #> GLM-AED run successful! [2024-07-12 04:42:46] #> Model run complete![2024-07-12 04:42:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:47] #> GLM-AED run successful! [2024-07-12 04:42:47] #> Model run complete![2024-07-12 04:42:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:48] #> GLM-AED run successful! [2024-07-12 04:42:48] #> Model run complete![2024-07-12 04:42:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:49] #> GLM-AED run successful! [2024-07-12 04:42:50] #> Model run complete![2024-07-12 04:42:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:50] #> GLM-AED run successful! [2024-07-12 04:42:50] #> Model run complete![2024-07-12 04:42:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:51] #> GLM-AED run successful! [2024-07-12 04:42:51] #> Model run complete![2024-07-12 04:42:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:51] #> GLM-AED run successful! [2024-07-12 04:42:52] #> Model run complete![2024-07-12 04:42:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:52] #> GLM-AED run successful! [2024-07-12 04:42:53] #> Model run complete![2024-07-12 04:42:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:53] #> GLM-AED run successful! [2024-07-12 04:42:54] #> Model run complete![2024-07-12 04:42:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:54] #> GLM-AED run successful! [2024-07-12 04:42:55] #> Model run complete![2024-07-12 04:42:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:55] #> GLM-AED run successful! [2024-07-12 04:42:56] #> Model run complete![2024-07-12 04:42:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:56] #> GLM-AED run successful! [2024-07-12 04:42:56] #> Model run complete![2024-07-12 04:42:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:57] #> GLM-AED run successful! [2024-07-12 04:42:57] #> Model run complete![2024-07-12 04:42:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:58] #> GLM-AED run successful! [2024-07-12 04:42:58] #> Model run complete![2024-07-12 04:42:58] #> Writing output for generation 7 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:42:58] #> Best fit: 1.2871 (sd: 265.95) #> Survival rate: 0.75 #> Starting generation 8/10, 40 members. [2024-07-12 04:42:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:59] #> GLM-AED run successful! [2024-07-12 04:42:59] #> Model run complete![2024-07-12 04:42:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:42:59] #> GLM-AED run successful! [2024-07-12 04:43:00] #> Model run complete![2024-07-12 04:43:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:00] #> GLM-AED run successful! [2024-07-12 04:43:01] #> Model run complete![2024-07-12 04:43:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:01] #> GLM-AED run successful! [2024-07-12 04:43:02] #> Model run complete![2024-07-12 04:43:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:02] #> GLM-AED run successful! [2024-07-12 04:43:03] #> Model run complete![2024-07-12 04:43:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:03] #> GLM-AED run successful! [2024-07-12 04:43:04] #> Model run complete![2024-07-12 04:43:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:04] #> GLM-AED run successful! [2024-07-12 04:43:05] #> Model run complete![2024-07-12 04:43:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:05] #> GLM-AED run successful! [2024-07-12 04:43:05] #> Model run complete![2024-07-12 04:43:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:06] #> GLM-AED run successful! [2024-07-12 04:43:07] #> Model run complete![2024-07-12 04:43:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:07] #> GLM-AED run successful! [2024-07-12 04:43:08] #> Model run complete![2024-07-12 04:43:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:08] #> GLM-AED run successful! [2024-07-12 04:43:08] #> Model run complete![2024-07-12 04:43:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:09] #> GLM-AED run successful! [2024-07-12 04:43:09] #> Model run complete![2024-07-12 04:43:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:10] #> GLM-AED run successful! [2024-07-12 04:43:11] #> Model run complete![2024-07-12 04:43:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:11] #> GLM-AED run successful! [2024-07-12 04:43:12] #> Model run complete![2024-07-12 04:43:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:12] #> GLM-AED run successful! [2024-07-12 04:43:13] #> Model run complete![2024-07-12 04:43:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:13] #> GLM-AED run successful! [2024-07-12 04:43:14] #> Model run complete![2024-07-12 04:43:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:14] #> GLM-AED run successful! [2024-07-12 04:43:14] #> Model run complete![2024-07-12 04:43:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:15] #> GLM-AED run successful! [2024-07-12 04:43:15] #> Model run complete![2024-07-12 04:43:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:16] #> GLM-AED run successful! [2024-07-12 04:43:16] #> Model run complete![2024-07-12 04:43:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:16] #> GLM-AED run successful! [2024-07-12 04:43:17] #> Model run complete![2024-07-12 04:43:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:17] #> GLM-AED run successful! [2024-07-12 04:43:18] #> Model run complete![2024-07-12 04:43:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:18] #> GLM-AED run successful! [2024-07-12 04:43:19] #> Model run complete![2024-07-12 04:43:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:19] #> GLM-AED run successful! [2024-07-12 04:43:20] #> Model run complete![2024-07-12 04:43:20] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:20] #> GLM-AED run successful! [2024-07-12 04:43:21] #> Model run complete![2024-07-12 04:43:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:21] #> GLM-AED run successful! [2024-07-12 04:43:22] #> Model run complete![2024-07-12 04:43:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:22] #> GLM-AED run successful! [2024-07-12 04:43:23] #> Model run complete![2024-07-12 04:43:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:23] #> GLM-AED run successful! [2024-07-12 04:43:24] #> Model run complete![2024-07-12 04:43:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:24] #> GLM-AED run successful! [2024-07-12 04:43:25] #> Model run complete![2024-07-12 04:43:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:25] #> GLM-AED run successful! [2024-07-12 04:43:26] #> Model run complete![2024-07-12 04:43:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:26] #> GLM-AED run successful! [2024-07-12 04:43:27] #> Model run complete![2024-07-12 04:43:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:27] #> GLM-AED run successful! [2024-07-12 04:43:28] #> Model run complete![2024-07-12 04:43:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:28] #> GLM-AED run successful! [2024-07-12 04:43:28] #> Model run complete![2024-07-12 04:43:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:29] #> GLM-AED run successful! [2024-07-12 04:43:29] #> Model run complete![2024-07-12 04:43:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:30] #> GLM-AED run successful! [2024-07-12 04:43:30] #> Model run complete![2024-07-12 04:43:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:31] #> GLM-AED run successful! [2024-07-12 04:43:31] #> Model run complete![2024-07-12 04:43:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:31] #> GLM-AED run successful! [2024-07-12 04:43:32] #> Model run complete![2024-07-12 04:43:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:32] #> GLM-AED run successful! [2024-07-12 04:43:33] #> Model run complete![2024-07-12 04:43:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:33] #> GLM-AED run successful! [2024-07-12 04:43:34] #> Model run complete![2024-07-12 04:43:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:34] #> GLM-AED run successful! [2024-07-12 04:43:35] #> Model run complete![2024-07-12 04:43:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:35] #> GLM-AED run successful! [2024-07-12 04:43:36] #> Model run complete![2024-07-12 04:43:36] #> Writing output for generation 8 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:43:36] #> Best fit: 1.2871 (sd: 333.96) #> Survival rate: 0.75 #> Starting generation 9/10, 40 members. [2024-07-12 04:43:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:36] #> GLM-AED run successful! [2024-07-12 04:43:37] #> Model run complete![2024-07-12 04:43:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:37] #> GLM-AED run successful! [2024-07-12 04:43:38] #> Model run complete![2024-07-12 04:43:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:39] #> GLM-AED run successful! [2024-07-12 04:43:39] #> Model run complete![2024-07-12 04:43:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:39] #> GLM-AED run successful! [2024-07-12 04:43:40] #> Model run complete![2024-07-12 04:43:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:40] #> GLM-AED run successful! [2024-07-12 04:43:41] #> Model run complete![2024-07-12 04:43:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:41] #> GLM-AED run successful! [2024-07-12 04:43:42] #> Model run complete![2024-07-12 04:43:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:42] #> GLM-AED run successful! [2024-07-12 04:43:43] #> Model run complete![2024-07-12 04:43:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:43] #> GLM-AED run successful! [2024-07-12 04:43:44] #> Model run complete![2024-07-12 04:43:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:44] #> GLM-AED run successful! [2024-07-12 04:43:45] #> Model run complete![2024-07-12 04:43:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:45] #> GLM-AED run successful! [2024-07-12 04:43:46] #> Model run complete![2024-07-12 04:43:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:46] #> GLM-AED run successful! [2024-07-12 04:43:47] #> Model run complete![2024-07-12 04:43:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:47] #> GLM-AED run successful! [2024-07-12 04:43:48] #> Model run complete![2024-07-12 04:43:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:48] #> GLM-AED run successful! [2024-07-12 04:43:49] #> Model run complete![2024-07-12 04:43:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:49] #> GLM-AED run successful! [2024-07-12 04:43:49] #> Model run complete![2024-07-12 04:43:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:50] #> GLM-AED run successful! [2024-07-12 04:43:50] #> Model run complete![2024-07-12 04:43:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:51] #> GLM-AED run successful! [2024-07-12 04:43:51] #> Model run complete![2024-07-12 04:43:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:52] #> GLM-AED run successful! [2024-07-12 04:43:52] #> Model run complete![2024-07-12 04:43:52] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:53] #> GLM-AED run successful! [2024-07-12 04:43:53] #> Model run complete![2024-07-12 04:43:53] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:54] #> GLM-AED run successful! [2024-07-12 04:43:54] #> Model run complete![2024-07-12 04:43:54] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:55] #> GLM-AED run successful! [2024-07-12 04:43:55] #> Model run complete![2024-07-12 04:43:55] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:56] #> GLM-AED run successful! [2024-07-12 04:43:56] #> Model run complete![2024-07-12 04:43:56] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:56] #> GLM-AED run successful! [2024-07-12 04:43:57] #> Model run complete![2024-07-12 04:43:57] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:57] #> GLM-AED run successful! [2024-07-12 04:43:58] #> Model run complete![2024-07-12 04:43:58] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:58] #> GLM-AED run successful! [2024-07-12 04:43:59] #> Model run complete![2024-07-12 04:43:59] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:43:59] #> GLM-AED run successful! [2024-07-12 04:44:00] #> Model run complete![2024-07-12 04:44:00] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:00] #> GLM-AED run successful! [2024-07-12 04:44:01] #> Model run complete![2024-07-12 04:44:01] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:01] #> GLM-AED run successful! [2024-07-12 04:44:02] #> Model run complete![2024-07-12 04:44:02] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:02] #> GLM-AED run successful! [2024-07-12 04:44:03] #> Model run complete![2024-07-12 04:44:03] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:03] #> GLM-AED run successful! [2024-07-12 04:44:04] #> Model run complete![2024-07-12 04:44:04] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:04] #> GLM-AED run successful! [2024-07-12 04:44:05] #> Model run complete![2024-07-12 04:44:05] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:05] #> GLM-AED run successful! [2024-07-12 04:44:06] #> Model run complete![2024-07-12 04:44:06] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:06] #> GLM-AED run successful! [2024-07-12 04:44:07] #> Model run complete![2024-07-12 04:44:07] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:07] #> GLM-AED run successful! [2024-07-12 04:44:08] #> Model run complete![2024-07-12 04:44:08] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:08] #> GLM-AED run successful! [2024-07-12 04:44:09] #> Model run complete![2024-07-12 04:44:09] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:09] #> GLM-AED run successful! [2024-07-12 04:44:10] #> Model run complete![2024-07-12 04:44:10] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:10] #> GLM-AED run successful! [2024-07-12 04:44:11] #> Model run complete![2024-07-12 04:44:11] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:11] #> GLM-AED run successful! [2024-07-12 04:44:12] #> Model run complete![2024-07-12 04:44:12] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:12] #> GLM-AED run successful! [2024-07-12 04:44:13] #> Model run complete![2024-07-12 04:44:13] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:13] #> GLM-AED run successful! [2024-07-12 04:44:14] #> Model run complete![2024-07-12 04:44:14] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:14] #> GLM-AED run successful! [2024-07-12 04:44:15] #> Model run complete![2024-07-12 04:44:15] #> Writing output for generation 9 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:44:15] #> Best fit: 1.2871 (sd: 265.98) #> Survival rate: 0.75 #> Starting generation 10/10, 40 members. [2024-07-12 04:44:15] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:15] #> GLM-AED run successful! [2024-07-12 04:44:16] #> Model run complete![2024-07-12 04:44:16] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:16] #> GLM-AED run successful! [2024-07-12 04:44:17] #> Model run complete![2024-07-12 04:44:17] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:17] #> GLM-AED run successful! [2024-07-12 04:44:18] #> Model run complete![2024-07-12 04:44:18] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:18] #> GLM-AED run successful! [2024-07-12 04:44:19] #> Model run complete![2024-07-12 04:44:19] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:19] #> GLM-AED run successful! [2024-07-12 04:44:20] #> Model run complete![2024-07-12 04:44:20] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:20] #> GLM-AED run successful! [2024-07-12 04:44:21] #> Model run complete![2024-07-12 04:44:21] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:21] #> GLM-AED run successful! [2024-07-12 04:44:22] #> Model run complete![2024-07-12 04:44:22] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:22] #> GLM-AED run successful! [2024-07-12 04:44:23] #> Model run complete![2024-07-12 04:44:23] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:23] #> GLM-AED run successful! [2024-07-12 04:44:24] #> Model run complete![2024-07-12 04:44:24] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:24] #> GLM-AED run successful! [2024-07-12 04:44:25] #> Model run complete![2024-07-12 04:44:25] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:25] #> GLM-AED run successful! [2024-07-12 04:44:26] #> Model run complete![2024-07-12 04:44:26] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:26] #> GLM-AED run successful! [2024-07-12 04:44:27] #> Model run complete![2024-07-12 04:44:27] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:27] #> GLM-AED run successful! [2024-07-12 04:44:28] #> Model run complete![2024-07-12 04:44:28] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:28] #> Model run complete![2024-07-12 04:44:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:29] #> GLM-AED run successful! [2024-07-12 04:44:29] #> Model run complete![2024-07-12 04:44:29] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:30] #> GLM-AED run successful! [2024-07-12 04:44:30] #> Model run complete![2024-07-12 04:44:30] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:30] #> GLM-AED run successful! [2024-07-12 04:44:31] #> Model run complete![2024-07-12 04:44:31] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:31] #> GLM-AED run successful! [2024-07-12 04:44:32] #> Model run complete![2024-07-12 04:44:32] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:32] #> GLM-AED run successful! [2024-07-12 04:44:33] #> Model run complete![2024-07-12 04:44:33] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:33] #> GLM-AED run successful! [2024-07-12 04:44:34] #> Model run complete![2024-07-12 04:44:34] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:34] #> GLM-AED run successful! [2024-07-12 04:44:35] #> Model run complete![2024-07-12 04:44:35] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:35] #> GLM-AED run successful! [2024-07-12 04:44:36] #> Model run complete![2024-07-12 04:44:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:36] #> Model run complete![2024-07-12 04:44:36] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:36] #> GLM-AED run successful! [2024-07-12 04:44:37] #> Model run complete![2024-07-12 04:44:37] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:37] #> GLM-AED run successful! [2024-07-12 04:44:38] #> Model run complete![2024-07-12 04:44:38] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:38] #> GLM-AED run successful! [2024-07-12 04:44:39] #> Model run complete![2024-07-12 04:44:39] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:39] #> GLM-AED run successful! [2024-07-12 04:44:40] #> Model run complete![2024-07-12 04:44:40] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:40] #> GLM-AED run successful! [2024-07-12 04:44:41] #> Model run complete![2024-07-12 04:44:41] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:41] #> GLM-AED run successful! [2024-07-12 04:44:42] #> Model run complete![2024-07-12 04:44:42] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:42] #> GLM-AED run successful! [2024-07-12 04:44:43] #> Model run complete![2024-07-12 04:44:43] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:43] #> GLM-AED run successful! [2024-07-12 04:44:44] #> Model run complete![2024-07-12 04:44:44] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:44] #> GLM-AED run successful! [2024-07-12 04:44:45] #> Model run complete![2024-07-12 04:44:45] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:45] #> GLM-AED run successful! [2024-07-12 04:44:46] #> Model run complete![2024-07-12 04:44:46] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:46] #> GLM-AED run successful! [2024-07-12 04:44:47] #> Model run complete![2024-07-12 04:44:47] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:47] #> GLM-AED run successful! [2024-07-12 04:44:48] #> Model run complete![2024-07-12 04:44:48] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:48] #> GLM-AED run successful! [2024-07-12 04:44:49] #> Model run complete![2024-07-12 04:44:49] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:49] #> GLM-AED run successful! [2024-07-12 04:44:50] #> Model run complete![2024-07-12 04:44:50] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:50] #> GLM-AED run successful! [2024-07-12 04:44:51] #> Model run complete![2024-07-12 04:44:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:51] #> GLM-AED run successful! [2024-07-12 04:44:51] #> Model run complete![2024-07-12 04:44:51] #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:52] #> GLM-AED run successful! [2024-07-12 04:44:52] #> Model run complete![2024-07-12 04:44:52] #> Writing output for generation 10 to simulation_data.csv with sim ID: 45819_glmaed_C_001 [2024-07-12 04:44:53] #> Best fit: 1.2871 (sd: 333.98) #> Survival rate: 0.75"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"visualise-calibration-results","dir":"Articles","previous_headings":"","what":"Visualise calibration results","title":"Calibrate AEME","text":"calibrations results can read using read_calib function. function takes following arguments: list; controls sensitivity analysis function created using create_control function. See create_control details. filepath; input files located relative 'config'. logical. TRUE, return raw calibration output dataframe \"fit\" \"gen\" columns. generally used restarting calibration. read_calib function returns dataframe calibration results. calibration results include model, generation, index (model run), parameter name, parameter value, fitness value median fitness value generation. results can visualised using plot_calib function. function takes following arguments: calib: calibration results read using read_calib function. model: model used calibration. ctrl: control parameters used calibration. returns list ggplot objects: dotty plot, density plot convergence plot.","code":"?read_calib calib <- read_calib(ctrl = ctrl, sim_id = sim_id, path = path) plist <- plot_calib(calib = calib, na_value = ctrl$na_value)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"dotty-plot","dir":"Articles","previous_headings":"Visualise calibration results","what":"Dotty plot","title":"Calibrate AEME","text":"can used comparing sensitivity across parameters. dotty plot shows fitness value parameter value generation. fitness value y-axis parameter value x-axis. faceted parameter name. parameter values coloured generation. best fitness value generation shown black line red dot.","code":"plist$dotty"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"histogram-plot","dir":"Articles","previous_headings":"Visualise calibration results","what":"Histogram plot","title":"Calibrate AEME","text":"useful comparing distribution parameter values across generations. histogram plot shows frequency parameter values generation. parameter values x-axis density y-axis. faceted parameter name. parameter converging value, histogram show peak around value. parameter converging value, histogram show flat distribution.","code":"plist$hist"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"convergence-plot","dir":"Articles","previous_headings":"Visualise calibration results","what":"Convergence plot","title":"Calibrate AEME","text":"generally used assessing model convergence. convergence plot shows values use iterations. parameter value y-axis iteration x-axis. faceted parameter name. parameter values coloured generation. best fitness value generation shown solid horizontal black line.","code":"plist$convergence"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"assess-calibrated-values","dir":"Articles","previous_headings":"","what":"Assess calibrated values","title":"Calibrate AEME","text":"best parameter values can extracted using get_param function. function takes following arguments: calib: calibration results read using read_calib function. na_value: value use missing values observed predicted data. used indicate model crashes can easily removed calibration results. fit_col: name column calibration results contains fitness value. Defaults fit. best: logical indicating whether return best parameter values entire calibration dataset. Defaults FALSE. best parameter values can used run model compare simulated values observed values. can done using run_aeme_param function. simulated values can compared observed values using assess_model function. function takes following arguments: aeme: aeme object observations model simulations. model: model assess. var_sim: variables use assessment. assess_model function returns: Data frame model performance statistics model variable. include: bias - Bias mae - Mean absolute error rmse - Root mean square error nmae - Normalised mean absolute error nse - Nash-Sutcliffe efficiency d2 - Index agreement model skill score Willmott index r - Pearson correlation coefficient rs - Spearman correlation coefficient r2 - R-squared value linear model B - Bardsley coefficient n - number observations","code":"best_params <- get_param(calib, na_value = ctrl$na_value, fit_col = \"fit\",                           best = TRUE) best_params aeme <- run_aeme_param(aeme = aeme, path = path,                        param = best_params, model = model,                        return_aeme = TRUE) #> Running models... (Have you tried parallelizing?) [2024-07-12 04:44:57] #> GLM-AED run successful! [2024-07-12 04:44:58] #> Model run complete![2024-07-12 04:44:58] #> Retrieving and formatting temp for model glm_aed #> Retrieving and formatting salt for model glm_aed ?assess_model assess_model(aeme = aeme, model = model, var_sim = vars_sim)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"visualise-model-performance","dir":"Articles","previous_headings":"Assess calibrated values","what":"Visualise model performance","title":"Calibrate AEME","text":"model performance can visualised using plot_resid function within AEME package. returns list ggplot objects, plot residuals variable. multi-panel plot displaying residuals : Observed vs. predicted values Residuals vs. predicted values Residuals vs. day year Residuals vs. quantiles observed values","code":"pl <- plot_resid(aeme = aeme, model = model, var_sim = vars_sim)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"water-temperature-residuals","dir":"Articles","previous_headings":"Assess calibrated values > Visualise model performance","what":"Water temperature residuals","title":"Calibrate AEME","text":"","code":"pl$HYD_temp"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/calibrate-aeme.html","id":"lake-level-residuals","dir":"Articles","previous_headings":"Assess calibrated values > Visualise model performance","what":"Lake level residuals","title":"Calibrate AEME","text":"","code":"pl$LKE_lvlwtr"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/download-era5.html","id":"download-nz-point-meteorological-data","dir":"Articles","previous_headings":"","what":"Download NZ point meteorological data","title":"Download ERA5 data","text":"Currently, ERA5-Land data (~9km grid spacing) archived New Zealand (166.5/-46.6/178.6/-34.5) time period 1980-2023 main meteorological variables (air temperature, dewpoint temperature, wind u-vector 10m, wind v-vector 10m, total precipitation, snowfall, surface level pressure, downwelling shortwave radiation, downwelling longwave radiation) required drive hydrological hydrodynamic models. can easily downloaded using example . parallel switch allows use multiple cores computer speed download.","code":"library(aemetools) lon <- 176.2717 lat <- -38.079 variables <- c(\"MET_tmpair\", \"MET_pprain\")  met <- get_era5_point(lat = lat, lon = lon, years = 2000:2001,                       variables = variables, format = \"aeme\", parallel = FALSE) #> Checking if lat/lon point is in the grid... #> Point is in the grid. #> Downloading ERA5 variables... [2024-07-12 04:45:09] (Have you tried parallelising?) #> Finished downloading ERA5 variables! [2024-07-12 04:45:25] summary(met) #>       Date              MET_tmpair       MET_pprain      #>  Min.   :2000-01-01   Min.   : 3.567   Min.   : 0.0000   #>  1st Qu.:2000-07-01   1st Qu.: 9.178   1st Qu.: 0.1464   #>  Median :2000-12-31   Median :12.053   Median : 1.5939   #>  Mean   :2000-12-31   Mean   :11.967   Mean   : 6.3207   #>  3rd Qu.:2001-07-01   3rd Qu.:14.835   3rd Qu.: 6.9353   #>  Max.   :2001-12-31   Max.   :19.837   Max.   :89.4112"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Sensitivity Analysis","text":"First, load AEME aemetools package: Create folder running example calibration setup.","code":"library(AEME) library(aemetools) tmpdir <- \"sa-test\" dir.create(tmpdir, showWarnings = FALSE) aeme_dir <- system.file(\"extdata/lake/\", package = \"AEME\") # Copy files from package into tempdir file.copy(aeme_dir, tmpdir, recursive = TRUE) #> [1] TRUE path <- file.path(tmpdir, \"lake\")  list.files(path, recursive = TRUE) #>  [1] \"aeme.yaml\"            \"data/catchment.dbf\"   \"data/catchment.prj\"   #>  [4] \"data/catchment.shp\"   \"data/catchment.shx\"   \"data/hypsograph.csv\"  #>  [7] \"data/inflow_FWMT.csv\" \"data/lake.dbf\"        \"data/lake.prj\"        #> [10] \"data/lake.shp\"        \"data/lake.shx\"        \"data/lake_obs.csv\"    #> [13] \"data/meteo.csv\"       \"data/outflow.csv\"     \"data/water_level.csv\" #> [16] \"model_controls.csv\""},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"build-aeme-ensemble","dir":"Articles","previous_headings":"","what":"Build AEME ensemble","title":"Sensitivity Analysis","text":"Using AEME functions, build AEME model setup. example, use glm_aed model. build_aeme function ","code":"aeme <- yaml_to_aeme(path = path, \"aeme.yaml\") model_controls <- AEME::get_model_controls() inf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1) outf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1) model <- c(\"gotm_wet\") aeme <- build_aeme(path = path, aeme = aeme,                        model = model, model_controls = model_controls,                        inf_factor = inf_factor, ext_elev = 5,                        use_bgc = TRUE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"description-of-sensitivity-analysis-method","dir":"Articles","previous_headings":"","what":"Description of Sensitivity Analysis method","title":"Sensitivity Analysis","text":"sensitivity analysis method used based Sobol method uses sensobol package. package provides several functions conduct variance-based uncertainty sensitivity analysis, estimation sensitivity indices visual representation results. implements several state---art first total-order estimators allows computation fourth-order effects, well approximation error, swift user-friendly way. information method, see sensobol package vignette.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"load-parameters-to-be-used-for-the-sensitivity-analysis","dir":"Articles","previous_headings":"","what":"Load parameters to be used for the sensitivity analysis","title":"Sensitivity Analysis","text":"Parameters loaded aemetools package within aeme_parameters dataframe. parameters stored data frame following columns: model: model name file: file name model parameter file name: parameter name value: parameter value min: minimum value parameter max: maximum value parameter Parameters used calibration. (man)","code":"utils::data(\"aeme_parameters\", package = \"AEME\") param <- aeme_parameters |>   dplyr::filter(file != \"wdr\") param"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"define-fitness-function","dir":"Articles","previous_headings":"Sensitivity analysis setup","what":"Define fitness function","title":"Sensitivity Analysis","text":"First, define function sensitivity analysis function use calculate sensitivity model. function takes dataframe argument. dataframe contains observed data (obs) modelled data (model). function return single value. use model mean. Different functions can applied different variables. example, can use mean water temperature median chloophyll-. combined named list functions passed sa_aeme function. named according target variable.","code":"# Function to calculate mean model output fit <- function(df) {   mean(df$model) } # Function to calculate median model output fit2 <- function(df) {   median(df$model) } # Create list of functions FUN_list <- list(HYD_temp = fit, PHY_tchla = fit2)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"define-control-parameters","dir":"Articles","previous_headings":"Sensitivity analysis setup","what":"Define control parameters","title":"Sensitivity Analysis","text":"Next, define control parameters sensitivity analysis. control parameters generated using create_control passed sa_aeme function. control parameters sensitivity analysis follows: method used. can either \"calib\" calibration \"sa\" sensitivity analysis. Additional arguments passed function create_control. arguments different calibration sensitivity analysis. arguments common methods: file_type string; file type write output . Options c(\"csv\", \"db\"). Defaults \"db\". file_name string; file name write output . Defaults \"results.db\" file_type \"db\" \"simulation_metadata.csv\" file_type \"csv\". na_value value replace NA values observations. Defaults 999. parallel boolean; run calibration parallel. Default TRUE ncore: number cores use calibration. used parallel = TRUE. Default parallel::detectCores() - 1. calibration, arguments : VTR Value reached. optimization process stop either maximum number iterations itermax reached best parameter vector bestmem found value fn(bestmem) <= VTR. Default -Inf. NP number population members. Defaults NA; user change value NP NA reset 10 * sum(param$model == model). many  problems best set NP least 10 times length parameter vector. itermax maximum iteration (population generation) allowed. Default 200. reltol relative convergence tolerance. algorithm stops unable reduce value factor reltol * (abs(val) + reltol). Default = 0.07 cutoff: quantile cutoff used select parents next generation. example, cutoff = 0.25, best 25% population used parents next generation. mutate fraction population undergo mutation (0-1). c_method character; method use calibration. Options \"CMAES\" \"LHC\". Defaults \"CMAES\". sensitivity analysis, arguments : N: initial sample size base sample matrix. vars_sim: named list output variables sensitivity analysis. name user defined list must contain: var: variable name use sensitivity analysis. month: vector months use sensitivity analysis. depth_range: vector length 2 minimum maximum depth range use sensitivity analysis. example examining surface temperature (surf_temp) months December February, bottom temperature (bot_temp), (10 - 13 m) also total chlorophyll-(PHY_tchla) surface (0 - 2 m) summer period.","code":"?create_control ctrl <- create_control(method = \"sa\", N = 2^4, ncore = 2, na_value = 999,                        parallel = FALSE, file_type = \"db\",                         file_name = \"file_type\",                        vars_sim = list(                          surf_temp = list(var = \"HYD_temp\",                                           month = c(12, 1:2),                                           depth_range = c(0, 2)                           ),                          bot_temp = list(var = \"HYD_temp\",                                          month = c(12, 1:2),                                          depth_range = c(10, 13)                          ),                          surf_chla = list(var = \"PHY_tchla\",                                           month = c(12, 1:2),                                           depth_range = c(0, 2)                          )                        ) )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"run-sensitivity-analysis","dir":"Articles","previous_headings":"","what":"Run sensitivity analysis","title":"Sensitivity Analysis","text":"defined fitness function, control parameters variables, can run sensitivity analysis. sa_aeme function takes following arguments: aeme; object. filepath; input files located relative 'config'. dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") string; model calibrate. one model can passed. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\"). dataframe; configuration loaded \"model_controls.csv\". list functions; named according variables vars_sim. Funtions form ⁠function(df)⁠ used calculate model fit. NULL, uses mean absolute error (MAE). list; controls sensitivity analysis function created using create_control function. See create_control details. dataframe; parameters used calibration. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\"). used restart previous calibration. sa_aeme function writes results file specified. sa_aeme function returns sim_id run.","code":"?sa_aeme # Run sensitivity analysis AEME model sim_id <- sa_aeme(aeme = aeme, path = path, param = param,                   model = model, ctrl = ctrl, FUN_list = FUN_list) #> Extracting indices for gotm_wet modelled variables [2024-07-12 04:45:33] #> Complete! [2024-07-12 04:45:37] #> Running sensitivity analysis in serial for gotm_wet with 144 parameter sets [2024-07-12 04:45:37] #>        turbulence/turb_param/k_min light_extinction/A/constant_value #> mean                     4.851e-06                           0.52760 #> median                   5.000e-06                           0.52700 #> sd                       2.799e-06                           0.06984 #>        light_extinction/g1/constant_value light_extinction/g2/constant_value #> mean                              0.59460                             1.3590 #> median                            0.59000                             1.2920 #> sd                                0.08189                             0.6979 #>        MET_wndspd MET_radswd inflow #> mean       0.9965     0.9983 1.4930 #> median     1.0000     1.0000 1.5000 #> sd         0.1619     0.1606 0.5311 #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:38] #> GOTM-WET run successful! [2024-07-12 04:45:41] #> Model run complete![2024-07-12 04:45:41] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:42] #> GOTM-WET run successful! [2024-07-12 04:45:45] #> Model run complete![2024-07-12 04:45:45] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:46] #> GOTM-WET run successful! [2024-07-12 04:45:49] #> Model run complete![2024-07-12 04:45:49] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:50] #> GOTM-WET run successful! [2024-07-12 04:45:53] #> Model run complete![2024-07-12 04:45:53] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:54] #> GOTM-WET run successful! [2024-07-12 04:45:57] #> Model run complete![2024-07-12 04:45:57] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:45:58] #> GOTM-WET run successful! [2024-07-12 04:46:01] #> Model run complete![2024-07-12 04:46:01] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:02] #> GOTM-WET run successful! [2024-07-12 04:46:05] #> Model run complete![2024-07-12 04:46:05] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:06] #> GOTM-WET run successful! [2024-07-12 04:46:09] #> Model run complete![2024-07-12 04:46:09] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:10] #> GOTM-WET run successful! [2024-07-12 04:46:13] #> Model run complete![2024-07-12 04:46:13] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:14] #> GOTM-WET run successful! [2024-07-12 04:46:17] #> Model run complete![2024-07-12 04:46:17] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:18] #> GOTM-WET run successful! [2024-07-12 04:46:21] #> Model run complete![2024-07-12 04:46:21] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:22] #> GOTM-WET run successful! [2024-07-12 04:46:25] #> Model run complete![2024-07-12 04:46:25] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:26] #> GOTM-WET run successful! [2024-07-12 04:46:29] #> Model run complete![2024-07-12 04:46:29] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:30] #> GOTM-WET run successful! [2024-07-12 04:46:33] #> Model run complete![2024-07-12 04:46:33] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:34] #> GOTM-WET run successful! [2024-07-12 04:46:37] #> Model run complete![2024-07-12 04:46:37] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:38] #> GOTM-WET run successful! [2024-07-12 04:46:41] #> Model run complete![2024-07-12 04:46:41] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:42] #> GOTM-WET run successful! [2024-07-12 04:46:45] #> Model run complete![2024-07-12 04:46:45] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:46] #> GOTM-WET run successful! [2024-07-12 04:46:49] #> Model run complete![2024-07-12 04:46:49] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:50] #> GOTM-WET run successful! [2024-07-12 04:46:53] #> Model run complete![2024-07-12 04:46:53] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:54] #> GOTM-WET run successful! [2024-07-12 04:46:57] #> Model run complete![2024-07-12 04:46:57] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:46:58] #> GOTM-WET run successful! [2024-07-12 04:47:01] #> Model run complete![2024-07-12 04:47:01] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:02] #> GOTM-WET run successful! [2024-07-12 04:47:05] #> Model run complete![2024-07-12 04:47:05] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:06] #> GOTM-WET run successful! [2024-07-12 04:47:09] #> Model run complete![2024-07-12 04:47:09] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:10] #> GOTM-WET run successful! [2024-07-12 04:47:13] #> Model run complete![2024-07-12 04:47:13] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:14] #> GOTM-WET run successful! [2024-07-12 04:47:17] #> Model run complete![2024-07-12 04:47:17] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:18] #> GOTM-WET run successful! [2024-07-12 04:47:21] #> Model run complete![2024-07-12 04:47:21] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:22] #> GOTM-WET run successful! [2024-07-12 04:47:25] #> Model run complete![2024-07-12 04:47:25] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:26] #> GOTM-WET run successful! [2024-07-12 04:47:29] #> Model run complete![2024-07-12 04:47:29] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:30] #> GOTM-WET run successful! [2024-07-12 04:47:33] #> Model run complete![2024-07-12 04:47:33] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:34] #> GOTM-WET run successful! [2024-07-12 04:47:37] #> Model run complete![2024-07-12 04:47:37] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:38] #> GOTM-WET run successful! [2024-07-12 04:47:41] #> Model run complete![2024-07-12 04:47:41] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:42] #> GOTM-WET run successful! [2024-07-12 04:47:45] #> Model run complete![2024-07-12 04:47:45] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:46] #> GOTM-WET run successful! [2024-07-12 04:47:49] #> Model run complete![2024-07-12 04:47:49] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:50] #> GOTM-WET run successful! [2024-07-12 04:47:53] #> Model run complete![2024-07-12 04:47:53] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:54] #> GOTM-WET run successful! [2024-07-12 04:47:57] #> Model run complete![2024-07-12 04:47:57] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:47:58] #> GOTM-WET run successful! [2024-07-12 04:48:01] #> Model run complete![2024-07-12 04:48:01] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:01] #> GOTM-WET run successful! [2024-07-12 04:48:05] #> Model run complete![2024-07-12 04:48:05] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:05] #> GOTM-WET run successful! [2024-07-12 04:48:08] #> Model run complete![2024-07-12 04:48:08] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:09] #> GOTM-WET run successful! [2024-07-12 04:48:12] #> Model run complete![2024-07-12 04:48:12] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:13] #> GOTM-WET run successful! [2024-07-12 04:48:17] #> Model run complete![2024-07-12 04:48:17] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:17] #> GOTM-WET run successful! [2024-07-12 04:48:21] #> Model run complete![2024-07-12 04:48:21] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:21] #> GOTM-WET run successful! [2024-07-12 04:48:24] #> Model run complete![2024-07-12 04:48:24] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:25] #> GOTM-WET run successful! [2024-07-12 04:48:28] #> Model run complete![2024-07-12 04:48:28] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:29] #> GOTM-WET run successful! [2024-07-12 04:48:32] #> Model run complete![2024-07-12 04:48:32] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:33] #> GOTM-WET run successful! [2024-07-12 04:48:36] #> Model run complete![2024-07-12 04:48:36] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:37] #> GOTM-WET run successful! [2024-07-12 04:48:40] #> Model run complete![2024-07-12 04:48:40] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:41] #> GOTM-WET run successful! [2024-07-12 04:48:44] #> Model run complete![2024-07-12 04:48:44] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:45] #> GOTM-WET run successful! [2024-07-12 04:48:48] #> Model run complete![2024-07-12 04:48:48] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:49] #> GOTM-WET run successful! [2024-07-12 04:48:52] #> Model run complete![2024-07-12 04:48:52] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:53] #> GOTM-WET run successful! [2024-07-12 04:48:56] #> Model run complete![2024-07-12 04:48:56] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:48:57] #> GOTM-WET run successful! [2024-07-12 04:49:00] #> Model run complete![2024-07-12 04:49:00] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:01] #> GOTM-WET run successful! [2024-07-12 04:49:04] #> Model run complete![2024-07-12 04:49:04] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:05] #> GOTM-WET run successful! [2024-07-12 04:49:08] #> Model run complete![2024-07-12 04:49:08] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:09] #> GOTM-WET run successful! [2024-07-12 04:49:12] #> Model run complete![2024-07-12 04:49:12] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:13] #> GOTM-WET run successful! [2024-07-12 04:49:16] #> Model run complete![2024-07-12 04:49:16] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:17] #> GOTM-WET run successful! [2024-07-12 04:49:20] #> Model run complete![2024-07-12 04:49:20] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:21] #> GOTM-WET run successful! [2024-07-12 04:49:24] #> Model run complete![2024-07-12 04:49:24] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:25] #> GOTM-WET run successful! [2024-07-12 04:49:28] #> Model run complete![2024-07-12 04:49:28] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:29] #> GOTM-WET run successful! [2024-07-12 04:49:32] #> Model run complete![2024-07-12 04:49:32] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:33] #> GOTM-WET run successful! [2024-07-12 04:49:36] #> Model run complete![2024-07-12 04:49:36] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:37] #> GOTM-WET run successful! [2024-07-12 04:49:40] #> Model run complete![2024-07-12 04:49:40] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:41] #> GOTM-WET run successful! [2024-07-12 04:49:44] #> Model run complete![2024-07-12 04:49:44] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:45] #> GOTM-WET run successful! [2024-07-12 04:49:48] #> Model run complete![2024-07-12 04:49:48] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:49] #> GOTM-WET run successful! [2024-07-12 04:49:52] #> Model run complete![2024-07-12 04:49:52] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:53] #> GOTM-WET run successful! [2024-07-12 04:49:56] #> Model run complete![2024-07-12 04:49:56] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:49:57] #> GOTM-WET run successful! [2024-07-12 04:50:00] #> Model run complete![2024-07-12 04:50:00] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:01] #> GOTM-WET run successful! [2024-07-12 04:50:04] #> Model run complete![2024-07-12 04:50:04] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:05] #> GOTM-WET run successful! [2024-07-12 04:50:08] #> Model run complete![2024-07-12 04:50:08] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:09] #> GOTM-WET run successful! [2024-07-12 04:50:12] #> Model run complete![2024-07-12 04:50:12] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:13] #> GOTM-WET run successful! [2024-07-12 04:50:16] #> Model run complete![2024-07-12 04:50:16] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:17] #> GOTM-WET run successful! [2024-07-12 04:50:20] #> Model run complete![2024-07-12 04:50:20] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:21] #> GOTM-WET run successful! [2024-07-12 04:50:24] #> Model run complete![2024-07-12 04:50:24] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:25] #> GOTM-WET run successful! [2024-07-12 04:50:28] #> Model run complete![2024-07-12 04:50:28] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:29] #> GOTM-WET run successful! [2024-07-12 04:50:32] #> Model run complete![2024-07-12 04:50:32] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:33] #> GOTM-WET run successful! [2024-07-12 04:50:36] #> Model run complete![2024-07-12 04:50:36] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:37] #> GOTM-WET run successful! [2024-07-12 04:50:40] #> Model run complete![2024-07-12 04:50:40] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:41] #> GOTM-WET run successful! [2024-07-12 04:50:44] #> Model run complete![2024-07-12 04:50:44] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:45] #> GOTM-WET run successful! [2024-07-12 04:50:48] #> Model run complete![2024-07-12 04:50:48] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:49] #> GOTM-WET run successful! [2024-07-12 04:50:52] #> Model run complete![2024-07-12 04:50:52] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:53] #> GOTM-WET run successful! [2024-07-12 04:50:56] #> Model run complete![2024-07-12 04:50:56] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:50:57] #> GOTM-WET run successful! [2024-07-12 04:51:00] #> Model run complete![2024-07-12 04:51:00] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:01] #> GOTM-WET run successful! [2024-07-12 04:51:04] #> Model run complete![2024-07-12 04:51:04] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:05] #> GOTM-WET run successful! [2024-07-12 04:51:08] #> Model run complete![2024-07-12 04:51:08] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:09] #> GOTM-WET run successful! [2024-07-12 04:51:12] #> Model run complete![2024-07-12 04:51:12] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:13] #> GOTM-WET run successful! [2024-07-12 04:51:16] #> Model run complete![2024-07-12 04:51:16] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:17] #> GOTM-WET run successful! [2024-07-12 04:51:20] #> Model run complete![2024-07-12 04:51:20] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:21] #> GOTM-WET run successful! [2024-07-12 04:51:24] #> Model run complete![2024-07-12 04:51:24] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:25] #> GOTM-WET run successful! [2024-07-12 04:51:28] #> Model run complete![2024-07-12 04:51:28] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:29] #> GOTM-WET run successful! [2024-07-12 04:51:32] #> Model run complete![2024-07-12 04:51:32] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:33] #> GOTM-WET run successful! [2024-07-12 04:51:36] #> Model run complete![2024-07-12 04:51:36] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:37] #> GOTM-WET run successful! [2024-07-12 04:51:40] #> Model run complete![2024-07-12 04:51:40] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:41] #> GOTM-WET run successful! [2024-07-12 04:51:44] #> Model run complete![2024-07-12 04:51:44] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:45] #> GOTM-WET run successful! [2024-07-12 04:51:48] #> Model run complete![2024-07-12 04:51:48] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:49] #> GOTM-WET run successful! [2024-07-12 04:51:52] #> Model run complete![2024-07-12 04:51:52] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:52] #> GOTM-WET run successful! [2024-07-12 04:51:55] #> Model run complete![2024-07-12 04:51:56] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:51:56] #> GOTM-WET run successful! [2024-07-12 04:52:00] #> Model run complete![2024-07-12 04:52:00] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:00] #> GOTM-WET run successful! [2024-07-12 04:52:03] #> Model run complete![2024-07-12 04:52:03] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:04] #> GOTM-WET run successful! [2024-07-12 04:52:07] #> Model run complete![2024-07-12 04:52:07] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:08] #> GOTM-WET run successful! [2024-07-12 04:52:11] #> Model run complete![2024-07-12 04:52:11] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:12] #> GOTM-WET run successful! [2024-07-12 04:52:15] #> Model run complete![2024-07-12 04:52:15] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:16] #> GOTM-WET run successful! [2024-07-12 04:52:19] #> Model run complete![2024-07-12 04:52:19] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:20] #> GOTM-WET run successful! [2024-07-12 04:52:23] #> Model run complete![2024-07-12 04:52:23] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:24] #> GOTM-WET run successful! [2024-07-12 04:52:27] #> Model run complete![2024-07-12 04:52:27] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:28] #> GOTM-WET run successful! [2024-07-12 04:52:31] #> Model run complete![2024-07-12 04:52:31] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:32] #> GOTM-WET run successful! [2024-07-12 04:52:35] #> Model run complete![2024-07-12 04:52:35] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:36] #> GOTM-WET run successful! [2024-07-12 04:52:39] #> Model run complete![2024-07-12 04:52:39] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:40] #> GOTM-WET run successful! [2024-07-12 04:52:43] #> Model run complete![2024-07-12 04:52:43] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:44] #> GOTM-WET run successful! [2024-07-12 04:52:47] #> Model run complete![2024-07-12 04:52:47] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:48] #> GOTM-WET run successful! [2024-07-12 04:52:52] #> Model run complete![2024-07-12 04:52:52] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:52] #> GOTM-WET run successful! [2024-07-12 04:52:55] #> Model run complete![2024-07-12 04:52:55] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:52:56] #> GOTM-WET run successful! [2024-07-12 04:52:59] #> Model run complete![2024-07-12 04:52:59] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:00] #> GOTM-WET run successful! [2024-07-12 04:53:03] #> Model run complete![2024-07-12 04:53:03] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:04] #> GOTM-WET run successful! [2024-07-12 04:53:07] #> Model run complete![2024-07-12 04:53:07] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:08] #> GOTM-WET run successful! [2024-07-12 04:53:11] #> Model run complete![2024-07-12 04:53:11] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:12] #> GOTM-WET run successful! [2024-07-12 04:53:15] #> Model run complete![2024-07-12 04:53:15] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:16] #> GOTM-WET run successful! [2024-07-12 04:53:19] #> Model run complete![2024-07-12 04:53:19] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:20] #> GOTM-WET run successful! [2024-07-12 04:53:23] #> Model run complete![2024-07-12 04:53:23] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:24] #> GOTM-WET run successful! [2024-07-12 04:53:27] #> Model run complete![2024-07-12 04:53:27] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:28] #> GOTM-WET run successful! [2024-07-12 04:53:31] #> Model run complete![2024-07-12 04:53:31] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:32] #> GOTM-WET run successful! [2024-07-12 04:53:35] #> Model run complete![2024-07-12 04:53:35] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:36] #> GOTM-WET run successful! [2024-07-12 04:53:39] #> Model run complete![2024-07-12 04:53:39] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:40] #> GOTM-WET run successful! [2024-07-12 04:53:43] #> Model run complete![2024-07-12 04:53:43] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:44] #> GOTM-WET run successful! [2024-07-12 04:53:47] #> Model run complete![2024-07-12 04:53:47] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:48] #> GOTM-WET run successful! [2024-07-12 04:53:51] #> Model run complete![2024-07-12 04:53:51] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:52] #> GOTM-WET run successful! [2024-07-12 04:53:55] #> Model run complete![2024-07-12 04:53:55] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:53:56] #> GOTM-WET run successful! [2024-07-12 04:53:59] #> Model run complete![2024-07-12 04:53:59] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:00] #> GOTM-WET run successful! [2024-07-12 04:54:03] #> Model run complete![2024-07-12 04:54:03] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:04] #> GOTM-WET run successful! [2024-07-12 04:54:07] #> Model run complete![2024-07-12 04:54:07] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:08] #> GOTM-WET run successful! [2024-07-12 04:54:11] #> Model run complete![2024-07-12 04:54:11] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:12] #> GOTM-WET run successful! [2024-07-12 04:54:15] #> Model run complete![2024-07-12 04:54:15] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:16] #> GOTM-WET run successful! [2024-07-12 04:54:19] #> Model run complete![2024-07-12 04:54:19] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:20] #> GOTM-WET run successful! [2024-07-12 04:54:23] #> Model run complete![2024-07-12 04:54:23] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:24] #> GOTM-WET run successful! [2024-07-12 04:54:27] #> Model run complete![2024-07-12 04:54:27] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:28] #> GOTM-WET run successful! [2024-07-12 04:54:31] #> Model run complete![2024-07-12 04:54:31] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:32] #> GOTM-WET run successful! [2024-07-12 04:54:35] #> Model run complete![2024-07-12 04:54:35] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:36] #> GOTM-WET run successful! [2024-07-12 04:54:39] #> Model run complete![2024-07-12 04:54:39] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:40] #> GOTM-WET run successful! [2024-07-12 04:54:43] #> Model run complete![2024-07-12 04:54:43] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:44] #> GOTM-WET run successful! [2024-07-12 04:54:47] #> Model run complete![2024-07-12 04:54:47] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:48] #> GOTM-WET run successful! [2024-07-12 04:54:51] #> Model run complete![2024-07-12 04:54:51] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:52] #> GOTM-WET run successful! [2024-07-12 04:54:55] #> Model run complete![2024-07-12 04:54:55] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:54:56] #> GOTM-WET run successful! [2024-07-12 04:54:59] #> Model run complete![2024-07-12 04:54:59] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:55:00] #> GOTM-WET run successful! [2024-07-12 04:55:03] #> Model run complete![2024-07-12 04:55:03] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:55:04] #> GOTM-WET run successful! [2024-07-12 04:55:07] #> Model run complete![2024-07-12 04:55:07] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Running models... (Have you tried parallelizing?) [2024-07-12 04:55:08] #> GOTM-WET run successful! [2024-07-12 04:55:11] #> Model run complete![2024-07-12 04:55:11] #> [1] \"surf_temp\" #> [1] \"bot_temp\" #> [1] \"surf_chla\" #> Writing output for generation 1 to file_type with sim ID: 45819_gotmwet_S_001 [2024-07-12 04:55:11] #> Completed gotm_wet! [2024-07-12 04:55:11]"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"reading-sensitivity-analysis-results","dir":"Articles","previous_headings":"","what":"Reading sensitivity analysis results","title":"Sensitivity Analysis","text":"sensitivity results can read using read_sa function. function takes following arguments: ctrl: control parameters used sensitivity analysis. model: model used sensitivity analysis. path: path directory model configuration . read_sa function returns list simulation id provided. list contains following elements: df: dataframe sensitivity analysis results. dataframe contains model, generation, index (model run), parameter name, parameter value, fitness value median fitness value generation. sobol_indices: list Sobol indices variable ’s senstivity parameters. sobol_dummy: list Sobol indices dummy parameter.","code":"# Read in sensitivity analysis results sa_res <- read_sa(ctrl = ctrl, sim_id = sim_id, path = path, R = 10^3) names(sa_res) #> [1] \"45819_gotmwet_S_001\" head(sa_res[[1]]$df) sa_res[[1]]$sobol_indices #> $surf_temp #>  #> First-order estimator: saltelli | Total-order estimator: jansen  #>  #> Total number of model runs: 144  #>  #> Sum of first order indices: 1.89187  #>        original         bias  std.error        low.ci     high.ci sensitivity #>           <num>        <num>      <num>         <num>       <num>      <char> #>  1:  0.55067384 -0.028886865 4.90844600  -9.040816689 10.19993809          Si #>  2:  0.02035620  0.072252905 1.22663374  -2.456054661  2.35226125          Si #>  3:  0.33133235 -0.073165635 3.91656594  -7.271830195  8.08082616          Si #>  4:  0.49909372 -0.173536195 6.41836643 -11.907137127 13.25239695          Si #>  5:  0.02867844  0.033995344 5.49082682 -10.767139713 10.75650590          Si #>  6: -0.87609808 -0.092892215 6.02716080 -12.596223961 11.02981222          Si #>  7:  1.33783343 -0.044313172 6.94767384 -12.235043900 14.99933711          Si #>  8:  0.47768642  0.033986571 0.22948417  -0.006080860  0.89348055          Ti #>  9:  0.02956548  0.002482154 0.01149433   0.004554861  0.04961179          Ti #> 10:  0.30475783  0.025913855 0.15384850  -0.022693544  0.58038149          Ti #> 11:  0.74879510  0.051533158 0.24490764   0.217251784  1.17727211          Ti #> 12:  0.51139099  0.047163432 0.18171736   0.108068068  0.82038704          Ti #> 13:  0.63086496  0.056744009 0.20927384   0.163951761  0.98429014          Ti #> 14:  0.86413165  0.056902735 0.30229198   0.214747529  1.39971030          Ti #>     parameters #>         <char> #>  1:      k_min #>  2:          A #>  3:         g1 #>  4:         g2 #>  5:     wndspd #>  6:     radswd #>  7:     inflow #>  8:      k_min #>  9:          A #> 10:         g1 #> 11:         g2 #> 12:     wndspd #> 13:     radswd #> 14:     inflow #>  #> $bot_temp #>  #> First-order estimator: saltelli | Total-order estimator: jansen  #>  #> Total number of model runs: 144  #>  #> Sum of first order indices: 10.62252  #>       original         bias std.error      low.ci    high.ci sensitivity #>          <num>        <num>     <num>       <num>      <num>      <char> #>  1:  0.2117194  0.740464409 4.0655851 -8.49714540  7.4396555          Si #>  2: -0.1748534  0.560514075 2.7218375 -6.07007083  4.5993359          Si #>  3:  0.7954640  0.653609708 3.8042243 -7.31428823  7.5979969          Si #>  4:  4.6814854  0.192984606 4.7645282 -4.84980282 13.8268045          Si #>  5:  1.0399096  0.449723671 4.0167808 -7.28255973  8.4629316          Si #>  6:  2.0378384  0.379568406 3.9263105 -6.03715706  9.3536971          Si #>  7:  2.0309597  0.393944557 4.5457223 -7.27243684 10.5464672          Si #>  8:  0.5614446  0.029877725 0.2513462  0.03893744  1.0241964          Ti #>  9:  0.3190257 -0.006154259 0.1889592 -0.04517328  0.6955332          Ti #> 10:  0.3982121  0.051326129 0.1950993 -0.03550154  0.7292735          Ti #> 11:  0.8601559  0.054307014 0.3400905  0.13928369  1.4724141          Ti #> 12:  0.4631422  0.055741015 0.1874701  0.03996660  0.7748358          Ti #> 13:  0.3740664  0.075951885 0.2210889 -0.13521170  0.7314407          Ti #> 14:  0.5402532  0.090295886 0.2414607 -0.02329694  0.9232115          Ti #>     parameters #>         <char> #>  1:      k_min #>  2:          A #>  3:         g1 #>  4:         g2 #>  5:     wndspd #>  6:     radswd #>  7:     inflow #>  8:      k_min #>  9:          A #> 10:         g1 #> 11:         g2 #> 12:     wndspd #> 13:     radswd #> 14:     inflow #>  #> $surf_chla #>  #> First-order estimator: saltelli | Total-order estimator: jansen  #>  #> Total number of model runs: 144  #>  #> Sum of first order indices: 1.488262  #>        original        bias std.error     low.ci   high.ci sensitivity #>           <num>       <num>     <num>      <num>     <num>      <char> #>  1:  0.37992005 0.009612219 0.6082434 -0.8218273 1.5624430          Si #>  2:  0.97418875 0.093400977 0.9308028 -0.9435523 2.7051278          Si #>  3: -0.27889892 0.325698552 1.0755983 -2.7127314 1.5035365          Si #>  4: -0.18766913 0.362684426 1.1865976 -2.8760421 1.7753350          Si #>  5:  0.02521067 0.396109701 1.2941495 -2.9073854 2.1655874          Si #>  6:  0.27204163 0.495712559 1.6732309 -3.5031432 3.0558013          Si #>  7:  0.30346864 0.556160053 1.7010378 -3.5866643 3.0812815          Si #>  8:  0.23490107 0.046610852 0.1799563 -0.1644177 0.5409981          Ti #>  9:  0.70176210 0.147145932 0.4852604 -0.3964768 1.5057091          Ti #> 10:  0.68555305 0.143741918 0.4999420 -0.4380572 1.5216794          Ti #> 11:  0.84153862 0.203209685 0.6607206 -0.6566596 1.9333175          Ti #> 12:  0.93379441 0.242439379 0.7626915 -0.8034928 2.1862029          Ti #> 13:  1.49959206 0.455065238 1.6354206 -2.1608386 4.2498923          Ti #> 14:  1.46253182 0.500957713 1.5564271 -2.0889670 4.0121152          Ti #>     parameters #>         <char> #>  1:      k_min #>  2:          A #>  3:         g1 #>  4:         g2 #>  5:     wndspd #>  6:     radswd #>  7:     inflow #>  8:      k_min #>  9:          A #> 10:         g1 #> 11:         g2 #> 12:     wndspd #> 13:     radswd #> 14:     inflow sa_res[[1]]$sobol_dummy #> $surf_temp #>   original          bias  std.error   low.ci  high.ci sensitivity parameters #> 1 1.973792 -8.917295e-05 0.03954368 1.896377 2.051386          Si      dummy #> 2 0.000000  8.255998e-04 0.42519886 0.000000 0.000000          Ti      dummy #>  #> $bot_temp #>   original        bias  std.error   low.ci   high.ci sensitivity parameters #> 1 1.798936 0.004456303 0.09384097 1.610554 1.9784042          Si      dummy #> 2 0.000000 0.004213136 0.67564055 0.000000 0.3484796          Ti      dummy #>  #> $surf_chla #>    original        bias std.error low.ci   high.ci sensitivity parameters #> 1 0.3769473  0.07726583 0.2617549      0 0.8127117          Si      dummy #> 2 0.0000000 -0.03912460 0.8848872      0 1.1873320          Ti      dummy"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"visualising-sensitivity-analysis-results","dir":"Articles","previous_headings":"","what":"Visualising sensitivity analysis results","title":"Sensitivity Analysis","text":"sensitivity analysis results can visualised different ways using functions: plot_uncertainty, plot_scatter plot_multiscatter. plots based output plots sensobol package. functions take following argument: sa_res: sensitivity analysis results returned read_sa function.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"uncertainty-plot","dir":"Articles","previous_headings":"Visualising sensitivity analysis results","what":"Uncertainty plot","title":"Sensitivity Analysis","text":"plot_uncertainty function plots distribution model output variable.","code":"# Plot sensitivity analysis results plot_uncertainty(sa_res)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"scatter-plot","dir":"Articles","previous_headings":"Visualising sensitivity analysis results","what":"Scatter plot","title":"Sensitivity Analysis","text":"plot_scatter function plots model output parameter value variable. useful identifying relationships model output parameter value. example, plot shows relationship model surface temperature (surf_temp_) parameter value scaling factor shortwave radiation (MET_radswd), also surface chlorophyll-(surf_chla) light extinction coefficient (light.Kw). low parameter value Kw, model chlorophyll-higher.","code":"plot_scatter(sa_res)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/articles/sensitivity-analysis.html","id":"multi-scatter-plot","dir":"Articles","previous_headings":"Visualising sensitivity analysis results","what":"Multi-scatter plot","title":"Sensitivity Analysis","text":"plot_multiscatter function plots parameters variable. parameter top x-axis parameter y-axis. useful identifying relationships parameters response variable.","code":"pl <- plot_multiscatter(sa_res)  pl[[1]][1] #> $surf_temp pl[[1]][2] #> $bot_temp pl[[1]][3] #> $surf_chla"},{"path":"https://special-enigma-8p9lgre.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tadhg Moore. Author, maintainer. Chris McBride. Author.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moore T, McBride C (2024). aemetools: Tools expand Aquatic Ecosystem Model Ensemble Package. R package version 0.0.0.9000, https://studious-enigma-z736ppg.pages.github.io/.","code":"@Manual{,   title = {aemetools: Tools to expand the Aquatic Ecosystem Model Ensemble Package},   author = {Tadhg Moore and Chris McBride},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://studious-enigma-z736ppg.pages.github.io/}, }"},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"aemetools-","dir":"","previous_headings":"","what":"aemetools - Improve ecosystem modelling","title":"aemetools - Improve ecosystem modelling","text":"aemetools designed work AEME. contains range functions assist setting simulations lake site. Currently, can use : Download meteorological data ERA5-Land point New Zealand 1999-2022, download ERA5-Land netCDF files area world. Set run hydrological simulations using suite models airGR package using catchment, reach lake data. Conduct sensitivity analysis parameters AEME models. Calibrate AEME models using lake observational data.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"aemetools - Improve ecosystem modelling","text":"can install development version aemetools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"limnotrack/aemetools\")"},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"download-nz-point-meteorological-data","dir":"","previous_headings":"Installation","what":"Download NZ point meteorological data","title":"aemetools - Improve ecosystem modelling","text":"Currently, ERA5-Land data (~9km grid spacing) archived New Zealand (166.5/-46.6/178.6/-34.5) time period 1980-2023 main meteorological variables (air temperature, dewpoint temperature, wind u-vector 10m, wind v-vector 10m, total precipitation, snowfall, surface level pressure, downwelling shortwave radiation, downwelling longwave radiation) required drive hydrological hydrodynamic models. can easily downloaded using example . parallel switch allows use multiple cores computer speed download.","code":"library(aemetools)  lon <- 176.2717 lat <- -38.079 variables <- c(\"MET_tmpair\", \"MET_pprain\")  met <- get_era5_point(lat = lat, lon = lon, years = 2020:2021,                       variables = variables, format = \"aeme\", parallel = TRUE) #> Checking if lat/lon point is in the grid... #> Point is in the grid. #> Downloading ERA5 variables in parallel... [2024-05-14 14:22:37] #> Finished downloading ERA5 variables! [2024-05-14 14:22:47] summary(met) #>       Date              MET_tmpair       MET_pprain       #>  Min.   :2020-01-01   Min.   : 4.848   Min.   : 0.00000   #>  1st Qu.:2020-07-01   1st Qu.: 9.699   1st Qu.: 0.08203   #>  Median :2020-12-31   Median :12.729   Median : 0.83959   #>  Mean   :2020-12-31   Mean   :12.845   Mean   : 5.10542   #>  3rd Qu.:2021-07-01   3rd Qu.:15.782   3rd Qu.: 5.73168   #>  Max.   :2021-12-31   Max.   :22.176   Max.   :53.44960 library(ggplot2) library(tidyr)  met |>    pivot_longer(cols = c(MET_tmpair, MET_pprain)) |>    ggplot(aes(x = Date, y = value)) +   geom_line() +   facet_wrap(~name, scales = \"free_y\") +   theme_bw()"},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"calibrate-aeme-model","dir":"","previous_headings":"Installation","what":"Calibrate AEME model","title":"aemetools - Improve ecosystem modelling","text":"See vignette ","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"sensitivity-analysis-for-aeme-models","dir":"","previous_headings":"Installation","what":"Sensitivity analysis for AEME models","title":"aemetools - Improve ecosystem modelling","text":"See vignette ","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/index.html","id":"hydrological-modelling---run-gr4j-model","dir":"","previous_headings":"Installation","what":"Hydrological modelling - Run GR4J model","title":"aemetools - Improve ecosystem modelling","text":"simple example set one lake inflows Lake Rotorua. First, input model generated using stream ID (nzsegment), spatial features (sf objects) reaches, lake catchment (including sub-catchments), observed discharge (available) meteorological data (air temperature precipitation). recursively creates upstream network using nzsegment, combines subcatchments upstream reaches (sf::st_union()) calculate area catchment.  Within airGR package, calibration algorithms allows calibrate hydrological model discharge data reach available. calibrated parameters can passed run_GR function run selected model.","code":"data_dir <- system.file(\"extdata/hydro/\", package = \"aemetools\") lake <- readRDS(file.path(data_dir, \"lake.rds\")) reaches <- readRDS(file.path(data_dir, \"reaches.rds\")) catchments <- readRDS(file.path(data_dir, \"catchments.rds\")) met <- readRDS(file.path(data_dir, \"met.rds\")) obs_flow <- readRDS(file.path(data_dir, \"obs_flow.rds\")) FUN_MOD <- airGR::RunModel_GR4J id <- 4087861 # nzsegment  inputs <- make_GR_inputs(id = id, reaches = reaches, lake = lake,                          catchments = catchments, obs_flow = obs_flow, met = met,                          lat = lat, FUN_MOD = FUN_MOD,                          plot = TRUE) #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries #> Warning in make_GR_inputs(id = id, reaches = reaches, lake = lake, catchments = #> catchments, : NA values present. Selecting period with less NA's. #' airGR uses indices to run the model, so first we split our observed data in  #' half (0.5) for calibration and validation periods based on when the  #' observation data starts (which is provided in `inputs$data$start`). idx_spl <- floor(nrow(inputs$data[inputs$start:nrow(inputs$data), ])                  * 0.5) #' Use a model warmup period as everything before when the observations start. warmup <- 1:(inputs$start - 1)  # Set the indices for the calibration period cal_idx <- inputs$start:(idx_spl + inputs$start)  # Run the calibration and assign the output calib <- calib_GR(inputs = inputs, warmup = warmup, run_index = cal_idx) #> Grid-Screening in progress (0% 20% 40% 60% 80% 100%) #>   Screening completed (81 runs) #>       Param =  432.681,   -2.376,   83.096,    2.384 #>       Crit. NSE[Q]       = -12.8326 #> Steepest-descent local search in progress #>   Calibration completed (30 iterations, 289 runs) #>       Param = 21807.299,   -9.151,  104.585,    2.003 #>       Crit. NSE[Q]       = 0.4836  # Extract the calibrated parameters param <- calib$ParamFinalR  # Run the model output <- run_GR(inputs = inputs, param = param,                  warmup = warmup, run_index = cal_idx)  # Plot the output plot(output, Qobs = inputs$data$Qmm[cal_idx])"},{"path":"https://special-enigma-8p9lgre.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/add_linz_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Add LINZ API key to environment variables — add_linz_key","title":"Add LINZ API key to environment variables — add_linz_key","text":"Add LINZ API key environment variables","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/add_linz_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add LINZ API key to environment variables — add_linz_key","text":"","code":"add_linz_key(key)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/add_linz_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add LINZ API key to environment variables — add_linz_key","text":"key character; LINZ API key. account needed obtain API key. function create_linz_key() open browser window create account obtain API key.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_aeme.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate AEME model parameters using observations — calib_aeme","title":"Calibrate AEME model parameters using observations — calib_aeme","text":"calib_model() runs model compares observations provided. can run parallel using multiple cores availlable computer run quicker.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_aeme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate AEME model parameters using observations — calib_aeme","text":"","code":"calib_aeme(   aeme,   path = \".\",   param,   model,   model_controls = NULL,   vars_sim = \"HYD_temp\",   FUN_list = NULL,   ctrl = NULL,   weights = c(1),   param_df = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_aeme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate AEME model parameters using observations — calib_aeme","text":"aeme aeme; object. path filepath; input files located relative `config`. param dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") model string; model calibrate. one model can passed. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\"). model_controls dataframe; configuration loaded \"model_controls.csv\". vars_sim vector; variables names used calculation model fit. Currently supports using one variable. FUN_list list functions; named according variables vars_sim. Funtions form function(df) used calculate model fit. NULL, uses mean absolute error (MAE). ctrl list; controls sensitivity analysis function created using create_control function. See create_control details. weights vector; weights variable vars_sim. Default c(1). param_df dataframe; parameters used calibration. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\"). used restart previous calibration.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_aeme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate AEME model parameters using observations — calib_aeme","text":"string simulation id used read simulation output.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_GR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate GR model — calib_GR","title":"Calibrate GR model — calib_GR","text":"Calibrate GR model","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_GR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate GR model — calib_GR","text":"","code":"calib_GR(   inputs,   warmup = NULL,   run_index,   FUN_CRIT = airGR::ErrorCrit_NSE,   FUN_CALIB = airGR::Calibration_Michel,   IniStates = NULL,   IniResLevels = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_GR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate GR model — calib_GR","text":"inputs list; inputs generated make_GR_inputs(). warmup vector; index inputs$data used warmup period model. run_index vector; index inputs$data used running GR model. FUN_CRIT [function (atomic list)] error criterion function (e.g. ErrorCrit_RMSE, ErrorCrit_NSE) FUN_CALIB (optional) [function] calibration algorithm function (e.g. Calibration_Michel), default = Calibration_Michel IniStates (optional) [numeric] object class IniStates [mm °C], see CreateIniStates details IniResLevels (optional) [numeric] vector initial fillings GR stores (4 values; use NA relevant given model) [- /mm]. See details","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/calib_GR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate GR model — calib_GR","text":"list airGR calibration outputs.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/convert_era5_ncdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ERA5 netCDF files to AEME or LER — convert_era5_ncdf","title":"Convert ERA5 netCDF files to AEME or LER — convert_era5_ncdf","text":"Convert ERA5 netCDF files AEME LakeEnsemblR formats.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/convert_era5_ncdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ERA5 netCDF files to AEME or LER — convert_era5_ncdf","text":"","code":"convert_era5_ncdf(   lat,   lon,   variable = c(\"10m_u_component_of_wind\", \"10m_v_component_of_wind\",     \"2m_dewpoint_temperature\", \"2m_temperature\", \"snowfall\", \"surface_pressure\",     \"surface_solar_radiation_downwards\", \"surface_thermal_radiation_downwards\",     \"total_precipitation\"),   year = 2022,   site = \"test\",   path = \".\",   format = \"AEME\" )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/convert_era5_ncdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ERA5 netCDF files to AEME or LER — convert_era5_ncdf","text":"lat numeric; latitude lon numeric; longitude variable string ERA5 variable names e.g. \"2m_temperature\", \"total_precipitation\" year numeric; vector years site string site name used downloading data. path filepath downloaded ERA5 ncdf files stored. format string; Either \"AEME\" \"LER\". Default \"AEME\".","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create control list for calibration or sensitivity analysis — create_control","title":"Create control list for calibration or sensitivity analysis — create_control","text":"Create control list calibration sensitivity analysis","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create control list for calibration or sensitivity analysis — create_control","text":"","code":"create_control(method, ...)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create control list for calibration or sensitivity analysis — create_control","text":"method method used. can either \"calib\" calibration \"sa\" sensitivity analysis. ... Additional arguments passed function create_control. arguments different calibration sensitivity analysis. arguments common methods: file_type string; file type write output . Options c(\"csv\", \"db\"). Defaults \"db\". file_name string; file name write output . Defaults \"results.db\" file_type \"db\" \"simulation_metadata.csv\" file_type \"csv\". na_value value replace NA values observations. Defaults 999. parallel boolean; run calibration parallel. Default TRUE ncore: number cores use calibration. used parallel = TRUE. Default parallel::detectCores() - 1. calibration, arguments : VTR Value reached. optimization process stop either maximum number iterations itermax reached best parameter vector bestmem found value fn(bestmem) <= VTR. Default -Inf. NP number population members. Defaults NA; user change value NP NA reset 10 * sum(param$model == model). many  problems best set NP least 10 times length parameter vector. itermax maximum iteration (population generation) allowed. Default 200. reltol relative convergence tolerance. algorithm stops unable reduce value factor reltol * (abs(val) + reltol). Default = 0.07 cutoff: quantile cutoff used select parents next generation. example, cutoff = 0.25, best 25% population used parents next generation. mutate fraction population undergo mutation (0-1). c_method character; method use calibration. Options \"CMAES\" \"LHC\". Defaults \"CMAES\". sensitivity analysis, arguments : N: initial sample size base sample matrix. vars_sim: named list output variables sensitivity analysis. name user defined list must contain: var: variable name use sensitivity analysis. month: vector months use sensitivity analysis. depth_range: vector length 2 minimum maximum depth range use sensitivity analysis.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create control list for calibration or sensitivity analysis — create_control","text":"list control parameters","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create control list for calibration or sensitivity analysis — create_control","text":"","code":"calib_ctrl <- create_control(\"calib\", VTR = -Inf, NP = 10, itermax = 30,                               reltol = 0.07, cutoff = 0.25, mutate = 0.1,                               parallel = TRUE, file_type = \"db\",                               file_name = \"results.db\", na_value = 999,                               ncore = 3)  sa_ctrl <- create_control(method = \"sa\", N = 2^2, ncore = 2L, na_value = 999,                           parallel = TRUE, file_type = \"db\",                           file_name = \"results.db\",                           vars_sim = list(surf_temp = list(var = \"HYD_temp\",                                                            month = c(10:12, 1:3),                                                            depth_range = c(0, 2)                                                            ),                                           bot_temp = list(var = \"HYD_temp\",                                                           month = c(10:12, 1:3),                                                           depth_range = c(10, 13)                                                           )                                           )                         )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_linz_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Create LINZ API key — create_linz_key","title":"Create LINZ API key — create_linz_key","text":"function open browser window create LINZ account obtain API key. API key copied clipboard can added environment variables using add_linz_key() function.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/create_linz_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create LINZ API key — create_linz_key","text":"","code":"create_linz_key()"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/download_era5_ncdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ERA5 netCDF files — download_era5_ncdf","title":"Download ERA5 netCDF files — download_era5_ncdf","text":"Download ERA5 meteorological data Copernicus Data Store (CDS). Create free CDS user account self registering. user account verified can get personal user ID key visiting user profile.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/download_era5_ncdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ERA5 netCDF files — download_era5_ncdf","text":"","code":"download_era5_ncdf(   lat,   lon,   variable = c(\"10m_u_component_of_wind\", \"10m_v_component_of_wind\",     \"2m_dewpoint_temperature\", \"2m_temperature\", \"snowfall\", \"surface_pressure\",     \"surface_solar_radiation_downwards\", \"surface_thermal_radiation_downwards\",     \"total_precipitation\"),   year = 2022,   month = 1:12,   site = \"test\",   user = NULL,   era5_dataset = \"reanalysis-era5-land\",   path = \".\",   job = TRUE )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/download_era5_ncdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ERA5 netCDF files — download_era5_ncdf","text":"lat numeric; latitude lon numeric; longitude variable vecto;r string ERA5 variable names e.g. \"2m_temperature\", \"total_precipitation\" year numeric; year vector years. month numeric; month vector months. Defaults 1:12. site string site name appended file user user ID linked Copernicus account era5_dataset string; ERA5 dataset use. Can 'reanalysis-era5-single-levels' 'reanalysis-era5-land' path filepath store downloaded file job logical; send request background job RStudio. works RStudio. Default = TRUE.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/download_era5_ncdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ERA5 netCDF files — download_era5_ncdf","text":"","code":"if (FALSE) { # \\dontrun{ path <- 'era5_folder' site <- 'lake' ecmwfr::wf_set_key(user = '123456',                    key = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX',                    service = 'cds')  download_era5(lat = lat, lon = lon, year = 2022,               user = user, path = path) met <- convert_era5(lat = lat, lon = lon, year = 2022,                     site = site, path = path) } # }"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/era5_ref_table.html","id":null,"dir":"Reference","previous_headings":"","what":"ERA5 reference table — era5_ref_table","title":"ERA5 reference table — era5_ref_table","text":"reference table variable names ERA5, LER AEME.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/era5_ref_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ERA5 reference table — era5_ref_table","text":"","code":"era5_ref_table"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/era5_ref_table.html","id":"era-ref-table","dir":"Reference","previous_headings":"","what":"era5_ref_table","title":"ERA5 reference table — era5_ref_table","text":"data frame 9 rows 6 columns: variable Variable name era5 ERA5 variable names nc ERA nc variable names ler LakeEnsemblR variable names aeme AEME variable names nc ERA nc variable names","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/era5_ref_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ERA5 reference table — era5_ref_table","text":"Package development.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_dem_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DEM value for a given latitude and longitude — get_dem_value","title":"Get DEM value for a given latitude and longitude — get_dem_value","text":"function uses LINZ data service obtain elevation value given latitude longitude. function get_raster_layer_value() used obtain value DEM layer (ID: 51768).","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_dem_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DEM value for a given latitude and longitude — get_dem_value","text":"","code":"get_dem_value(lat, lon, key = NULL)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_dem_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DEM value for a given latitude and longitude — get_dem_value","text":"lat numeric; Latitude lon numeric; Longitude key character; LINZ API key. can set environment variable using add_linz_key() function passed character. See ?add_linz_key information setting API key.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_dem_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DEM value for a given latitude and longitude — get_dem_value","text":"numeric value NA outside extent","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_era5_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ERA5 data for a coordinate — get_era5_point","title":"Get ERA5 data for a coordinate — get_era5_point","text":"Extract ERA5-Land meteorological data closest grid particular latitude longitude selected number years (1980-2023).","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_era5_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ERA5 data for a coordinate — get_era5_point","text":"","code":"get_era5_point(   lat,   lon,   years,   variables = c(\"MET_tmpair\", \"MET_tmpdew\", \"MET_wnduvu\", \"MET_wnduvv\", \"MET_pprain\",     \"MET_ppsnow\", \"MET_prsttn\", \"MET_radswd\"),   format = \"aeme\",   parallel = TRUE,   ncores )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_era5_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ERA5 data for a coordinate — get_era5_point","text":"lat numeric; Latitude lon numeric; Longitude years numeric; vector years numeric form extracted. Currently years limited 1980-2022. variables vector; AEME meteorological variable names downloaded. Defaults available variables: c(\"MET_tmpair\", \"MET_tmpdew\", \"MET_wnduvu\", \"MET_wnduvv\", \"MET_pprain\", \"MET_ppsnow\", \"MET_prsttn\", \"MET_radswd\"). format string; format column headers. Can \"aeme\" \"ler\". Defaults \"aeme\". parallel boolean; parallelise download ERA5 variables. Defaults TRUE. ncores integer; number cores use parallelisation. missing, defaults min(c(parallel::detectCores() - 1, length(variables)))","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_era5_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ERA5 data for a coordinate — get_era5_point","text":"dataframe daily ERA5 data.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_linz_basemap_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get LINZ basemap tile — get_linz_basemap_tile","title":"Get LINZ basemap tile — get_linz_basemap_tile","text":"Get map tiles LINZ basemap service. requires API key can obtained : https://basemaps.linz.govt.nz","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_linz_basemap_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get LINZ basemap tile — get_linz_basemap_tile","text":"","code":"get_linz_basemap_tile(x, zoom = 16, key = NULL, verbose = FALSE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_linz_basemap_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get LINZ basemap tile — get_linz_basemap_tile","text":"x sf, sfc, bbox, SpatRaster, SpatVector SpatExtent object. x SpatExtent must express coordinates lon/lat WGS84 (epsg:4326). zoom zoom level (see Details). key character; LINZ API key. NULL, look key LINZ_KEY environment variable. set, throw error. Use add_linz_key function set key. @importFrom maptiles create_provider get_tiles @importFrom terra subset verbose TRUE, tiles filepaths, zoom level attribution displayed.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_linz_basemap_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get LINZ basemap tile — get_linz_basemap_tile","text":"SpatRaster returned.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter values from calibration results — get_param","title":"Get parameter values from calibration results — get_param","text":"Get parameter values calibration results","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter values from calibration results — get_param","text":"","code":"get_param(calib, na_value, fit_col = \"fit\", best = FALSE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter values from calibration results — get_param","text":"calib list calibration results loaded using read_calib. na_value numeric value corresponds NA value used calibration. fit_col character; name column containing fit values. Default \"fit\". best logical value indicating whether return best parameter values parameter values. model character vector model name.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter values from calibration results — get_param","text":"data frame parameter values.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_layer_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster layer value for a given latitude and longitude — get_raster_layer_value","title":"Get raster layer value for a given latitude and longitude — get_raster_layer_value","text":"Get raster layer value given latitude longitude","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_layer_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster layer value for a given latitude and longitude — get_raster_layer_value","text":"","code":"get_raster_layer_value(lat, lon, layer_id, key = NULL)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_layer_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raster layer value for a given latitude and longitude — get_raster_layer_value","text":"lat numeric; Latitude lon numeric; Longitude layer_id numeric; layer ID value raster layer LINZ data service. See https://data.linz.govt.nz/ key character; LINZ API key. can set environment variable using add_linz_key() function passed character. See ?add_linz_key information setting API key.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_layer_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raster layer value for a given latitude and longitude — get_raster_layer_value","text":"numeric value NA outside extent","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a raster tile from LINZ — get_raster_tile","title":"Get a raster tile from LINZ — get_raster_tile","text":"Get raster tile LINZ","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a raster tile from LINZ — get_raster_tile","text":"","code":"get_raster_tile(x, layer_id, zoom = 15, key = NULL, verbose = FALSE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a raster tile from LINZ — get_raster_tile","text":"x sf, sfc, bbox, SpatRaster, SpatVector SpatExtent object. x SpatExtent must express coordinates lon/lat WGS84 (epsg:4326). layer_id numeric; layer ID value raster layer LINZ data service. See https://data.linz.govt.nz/ zoom numeric; zoom level tile. Default 15. key character; LINZ API key. NULL, look key LINZ_KEY environment variable. set, throw error. Use add_linz_key function set key. @importFrom maptiles create_provider get_tiles @importFrom terra subset verbose TRUE, tiles filepaths, zoom level attribution displayed.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_raster_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a raster tile from LINZ — get_raster_tile","text":"raster object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_upstream_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all upstream reaches — get_upstream_rec","title":"Get all upstream reaches — get_upstream_rec","text":"Get upstream reaches","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_upstream_rec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all upstream reaches — get_upstream_rec","text":"","code":"get_upstream_rec(HydroID, reaches)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_upstream_rec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all upstream reaches — get_upstream_rec","text":"HydroID numeric; identifier target reach reaches sf dataframe; reaches HydroID's","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_upstream_rec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all upstream reaches — get_upstream_rec","text":"sf dataframe upstream reaches","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_wlevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get modelled water level — get_wlevel","title":"Get modelled water level — get_wlevel","text":"Get modelled water level","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_wlevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get modelled water level — get_wlevel","text":"","code":"get_wlevel(lake_dir, model, nlev, return_df = FALSE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_wlevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get modelled water level — get_wlevel","text":"lake_dir lake directory model string; model name. nlev numeric; number levels extract. return_df logical; return dataframe water level. Default FALSE.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/get_wlevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get modelled water level — get_wlevel","text":"dataframe water level.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/make_GR_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Make inputs for the GR models — make_GR_inputs","title":"Make inputs for the GR models — make_GR_inputs","text":"Make inputs GR models","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/make_GR_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make inputs for the GR models — make_GR_inputs","text":"","code":"make_GR_inputs(   id,   reaches,   lake,   catchments,   obs_flow = NULL,   met,   lat = NULL,   FUN_MOD = airGR::RunModel_GR6J,   plot = FALSE )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/make_GR_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make inputs for the GR models — make_GR_inputs","text":"id numeric; Reach ID reaches sf; object reaches linestrings. lake sf; polygon lake shore. catchments sf; polygon catchmentss. obs_flow dataframe; containing Date flow m3/s. met dataframe; containing Date, air temperature precipitation lat numeric; latitude. NULL, uses latitude centre lake. FUN_MOD function airGR package used. Defaults airGR::RunModel_GR6J plot logical; plot reaches, lake catchment? Defaults FALSE.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/make_GR_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make inputs for the GR models — make_GR_inputs","text":"list inputs run_GR().","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_aerial_imagery_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object of aerial imagery metadata for New Zealand. — nz_aerial_imagery_metadata","title":"sf object of aerial imagery metadata for New Zealand. — nz_aerial_imagery_metadata","text":"can used query aerial imagery coverage metadata New Zealand.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_aerial_imagery_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object of aerial imagery metadata for New Zealand. — nz_aerial_imagery_metadata","text":"","code":"nz_aerial_imagery_metadata"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_aerial_imagery_metadata.html","id":"nz-aerial-imagery-metadata","dir":"Reference","previous_headings":"","what":"nz_aerial_imagery_metadata","title":"sf object of aerial imagery metadata for New Zealand. — nz_aerial_imagery_metadata","text":"sf data frame 230 rows 8 columns: layer_id Layer ID aerial imagery title Title aerial imagery abstract Abstract aerial imagery region Region aerial imagery res Resolution aerial imagery. Units denoted units column. units Units resolution aerial imagery year Year aerial imagery geometry Geometry aerial imagery","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_aerial_imagery_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sf object of aerial imagery metadata for New Zealand. — nz_aerial_imagery_metadata","text":"Package development.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_dem_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"sf object of Digital Elevation Model (DEM) metadata for New Zealand. — nz_dem_metadata","title":"sf object of Digital Elevation Model (DEM) metadata for New Zealand. — nz_dem_metadata","text":"can used query DEM coverage metadata New Zealand.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_dem_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sf object of Digital Elevation Model (DEM) metadata for New Zealand. — nz_dem_metadata","text":"","code":"nz_dem_metadata"},{"path":[]},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_dem_metadata.html","id":"nz-dem-metadata","dir":"Reference","previous_headings":"","what":"nz_dem_metadata","title":"sf object of Digital Elevation Model (DEM) metadata for New Zealand. — nz_dem_metadata","text":"sf data frame 230 rows 8 columns: layer_id Layer ID DEM title Title DEM abstract Abstract DEM region Region DEM res Resolution DEM. Units denoted units column. units Units resolution DEM year Year DEM geometry Geometry DEM","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/nz_dem_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"sf object of Digital Elevation Model (DEM) metadata for New Zealand. — nz_dem_metadata","text":"Package development.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_calib.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot calibration results — plot_calib","title":"Plot calibration results — plot_calib","text":"Plot calibration results","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_calib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot calibration results — plot_calib","text":"","code":"plot_calib(   calib,   na_value,   fit_col = \"fit\",   nrow = 2,   base_size = 8,   return_pars = FALSE,   log_y = TRUE )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_calib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot calibration results — plot_calib","text":"calib dataframe; output read_calib na_value numeric; value replace NA values fit_col character; name column containing fit values. Default \"fit\". nrow integer; number rows plot base_size numeric; base size theme return_pars logical; return parameter values","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_calib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot calibration results — plot_calib","text":"list plots","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot AEME ensemble output — plot_ensemble","title":"Plot AEME ensemble output — plot_ensemble","text":"Plot AEME ensemble output","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot AEME ensemble output — plot_ensemble","text":"","code":"plot_ensemble(   aeme,   model,   var_sim = \"HYD_temp\",   depth = NULL,   conf_int = 0.95,   type = \"ribbon\",   remove_spin_up = TRUE,   add_obs = TRUE,   var_lims = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot AEME ensemble output — plot_ensemble","text":"aeme aeme; object. model vector; models used. Can `dy_cd`, `glm_aed`, `gotm_wet`. var_sim string; variable plot conf_int numeric; confidence interval plot type = \"ribbon\". Default 0.95. type character; type plot create. Can \"ribbon\", plots geom_ribbon represent confidence intervals specified conf_int \"line, plots ensemble members lines. Default \"ribbon\". remove_spin_up logical; remove spin-period plot. Default TRUE. add_obs logical; add observations plot var_lims numeric vector length 2; limits variable. Defaults NULL generate common limits variables.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot AEME ensemble output — plot_ensemble","text":"ggplot object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_multiscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multiscatter of the parameters against each other — plot_multiscatter","title":"Plot multiscatter of the parameters against each other — plot_multiscatter","text":"Plot multiscatter parameters ","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_multiscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multiscatter of the parameters against each other — plot_multiscatter","text":"","code":"plot_multiscatter(sa)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_multiscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multiscatter of the parameters against each other — plot_multiscatter","text":"sa list; sensitivity analysis results read read_sa","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_multiscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multiscatter of the parameters against each other — plot_multiscatter","text":"list ggplot objects","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the scatter of the output of a sensitivity analysis — plot_scatter","title":"Plot the scatter of the output of a sensitivity analysis — plot_scatter","text":"Plot scatter output sensitivity analysis","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the scatter of the output of a sensitivity analysis — plot_scatter","text":"","code":"plot_scatter(sa, cutoff = NA)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the scatter of the output of a sensitivity analysis — plot_scatter","text":"sa list; sensitivity analysis results read read_sa cutoff numeric. maximum value fit include plot. can useful remove outliers.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the scatter of the output of a sensitivity analysis — plot_scatter","text":"ggplot object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_sobol.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of first, total, second, third and fourth-order Sobol' indices — plot_sobol","title":"Visualization of first, total, second, third and fourth-order Sobol' indices — plot_sobol","text":"Visualization first, total, second, third fourth-order Sobol' indices","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_sobol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of first, total, second, third and fourth-order Sobol' indices — plot_sobol","text":"","code":"plot_sobol(sa, order = \"first\", add_errorbars = TRUE, use_dummy = TRUE, ...)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_sobol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of first, total, second, third and fourth-order Sobol' indices — plot_sobol","text":"sa list; sensitivity analysis results read read_sa","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_sobol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of first, total, second, third and fourth-order Sobol' indices — plot_sobol","text":"list ggplot objects variable","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the uncertainty of the output of a sensitivity analysis — plot_uncertainty","title":"Plot the uncertainty of the output of a sensitivity analysis — plot_uncertainty","text":"Plot uncertainty output sensitivity analysis","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the uncertainty of the output of a sensitivity analysis — plot_uncertainty","text":"","code":"plot_uncertainty(sa, bins = 30)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the uncertainty of the output of a sensitivity analysis — plot_uncertainty","text":"sa list; sensitivity analysis results read read_sa bins integer; number bins histogram. Default 30.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/plot_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the uncertainty of the output of a sensitivity analysis — plot_uncertainty","text":"ggplot object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_calib_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the calibration metadata — read_calib_meta","title":"Read the calibration metadata — read_calib_meta","text":"function reads calibration metadata output file. output file can either DuckDB database CSV file. function reads metadata returns data frame.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_calib_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the calibration metadata — read_calib_meta","text":"","code":"read_calib_meta(file, path = \".\")"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_calib_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the calibration metadata — read_calib_meta","text":"file path output file. can either DuckDB database CSV file.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_calib_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the calibration metadata — read_calib_meta","text":"data frame calibration metadata","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_sa.html","id":null,"dir":"Reference","previous_headings":"","what":"Read sensitivity analysis output — read_sa","title":"Read sensitivity analysis output — read_sa","text":"Read sensitivity analysis output","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_sa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read sensitivity analysis output — read_sa","text":"","code":"read_sa(ctrl, sim_id, path = \".\", R = NULL, boot = TRUE)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_sa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read sensitivity analysis output — read_sa","text":"ctrl list; controls sensitivity analysis function created using create_control function. See create_control details. path filepath; input files located relative `config`. R Positive integer, number bootstrap replicas. Default NULL. boot Logical. TRUE, function bootstraps Sobol' indices. FALSE, provides point estimates. Default boot = FALSE.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_sa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read sensitivity analysis output — read_sa","text":"list thedata frame sensitivity analysis results sobol indices variable.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the simulation metadata — read_simulation_meta","title":"Read the simulation metadata — read_simulation_meta","text":"function reads simulation metadata output file. output file can either DuckDB database CSV file. function reads metadata returns data frame.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the simulation metadata — read_simulation_meta","text":"","code":"read_simulation_meta(file, path = \".\")"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the simulation metadata — read_simulation_meta","text":"file path output file. can either DuckDB database CSV file.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the simulation metadata — read_simulation_meta","text":"data frame simulation metadata","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Read calibration output — read_simulation_output","title":"Read calibration output — read_simulation_output","text":"Read calibration output","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read calibration output — read_simulation_output","text":"","code":"read_simulation_output(ctrl, path = \".\", file = NULL, sim_id = NULL)  read_calib(ctrl, path = \".\", file = NULL, sim_id = NULL)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read calibration output — read_simulation_output","text":"ctrl list; controls sensitivity analysis function created using create_control function. See create_control details. path filepath; input files located relative `config`. raw logical. TRUE, return raw calibration output dataframe \"fit\" \"gen\" columns. generally used restarting calibration.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_simulation_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read calibration output — read_simulation_output","text":"data frame calibration results.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_web_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from online databases as sf object — read_web_sf","title":"Read data from online databases as sf object — read_web_sf","text":"Read data online databases sf object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_web_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from online databases as sf object — read_web_sf","text":"","code":"read_web_sf(url, layer_id, key = NULL)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_web_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from online databases as sf object — read_web_sf","text":"url character, URL web service layer_id numeric; layer ID value raster layer LINZ data service. See https://data.linz.govt.nz/ key character; LINZ API key. can set environment variable using add_linz_key() function passed character. See ?add_linz_key information setting API key.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/read_web_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from online databases as sf object — read_web_sf","text":"sf object","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Run AEME ensemble — run_aeme_ensemble","title":"Run AEME ensemble — run_aeme_ensemble","text":"Run parameter ensemble","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run AEME ensemble — run_aeme_ensemble","text":"","code":"run_aeme_ensemble(   aeme,   model,   n = 10,   dist = \"norm\",   path = \".\",   parallel = FALSE,   ncores = NULL,   param = NULL,   na_value = 999 )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run AEME ensemble — run_aeme_ensemble","text":"aeme aeme; object. model string; model calibrate. one model can passed. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\"). path filepath; input files located relative `config`. param dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\")","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run AEME ensemble — run_aeme_ensemble","text":"`aeme` object model output loaded.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Run AEME with parameter dataframe — run_aeme_param","title":"Run AEME with parameter dataframe — run_aeme_param","text":"Run AEME parameter dataframe","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run AEME with parameter dataframe — run_aeme_param","text":"","code":"run_aeme_param(   aeme,   param,   model,   path = \".\",   model_controls = NULL,   na_value = 999,   return_nc = FALSE,   return_aeme = FALSE,   parallel = FALSE )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run AEME with parameter dataframe — run_aeme_param","text":"aeme aeme; object. param dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") model vector; models used. Can `dy_cd`, `glm_aed`, `gotm_wet`. path filepath; input files located relative `config`. model_controls dataframe; configuration loaded \"model_controls.csv\". na_value numeric; value return model run unsuccessful return_nc boolean; return netCDF file connection return_aeme boolean; return AEME object parallel logical; run models parallel. Defaults FALSE.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run AEME with parameter dataframe — run_aeme_param","text":"na_value model run unsuccessful","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Run AEME in a Shiny app — run_aeme_shiny","title":"Run AEME in a Shiny app — run_aeme_shiny","text":"Run AEME Shiny app","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run AEME in a Shiny app — run_aeme_shiny","text":"","code":"run_aeme_shiny(aeme, param, path = \".\", model_controls = NULL)"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run AEME in a Shiny app — run_aeme_shiny","text":"aeme aeme; object. path filepath; input files located relative `config`. model_controls dataframe; configuration loaded \"model_controls.csv\".","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_aeme_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run AEME in a Shiny app — run_aeme_shiny","text":"Launches shiny app","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_and_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a model and calculate model fit. — run_and_fit","title":"Run a model and calculate model fit. — run_and_fit","text":"Run model calculate model fit.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_and_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a model and calculate model fit. — run_and_fit","text":"","code":"run_and_fit(   aeme,   param,   model,   vars_sim,   path,   model_controls = NULL,   FUN_list = NULL,   weights,   na_value = 999,   var_indices = NULL,   return_indices = FALSE,   include_wlev = FALSE,   return_df = FALSE,   method = \"calib\",   sa_ctrl = NULL,   fit = TRUE )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_and_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a model and calculate model fit. — run_and_fit","text":"aeme aeme; object. param dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") model string; model. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\") vars_sim vector; variables names used calculation model fit. Currently supports using one variable. path filepath; input files located relative `config`. model_controls dataframe; configuration loaded \"model_controls.csv\". FUN_list function; form function(O, P) used calculate model fit. NULL, uses mean absolute error (MAE). weights vector; weights used calculation model fit. na_value numeric; value returned model fails run. var_indices list; generated running run_and_fit() return indices = TRUE first simulation. return_indices boolean; return indices (depths, time dates) variable. Used running calibration time period change simulations. include_wlev boolean; include water level calculation model fit. return_df boolean; return dataframe modelled observed. method string; method model run. Options c(\"sa\", \"calib\"). fit boolean; fit model . FALSE, return netCDF file connection.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_and_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a model and calculate model fit. — run_and_fit","text":"single value model fit, calculated FUN_list.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_GR.html","id":null,"dir":"Reference","previous_headings":"","what":"Run GR model — run_GR","title":"Run GR model — run_GR","text":"Run GR model","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_GR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run GR model — run_GR","text":"","code":"run_GR(   inputs,   param,   warmup = NULL,   run_index,   IniStates = NULL,   IniResLevels = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_GR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run GR model — run_GR","text":"inputs list; inputs generated make_GR_inputs(). param vector; parameters. Usually generated calib_GR(). warmup vector; index inputs$data used warmup period model. run_index vector; index inputs$data used running GR model. IniStates (optional) [numeric] object class IniStates [mm °C], see CreateIniStates details IniResLevels (optional) [numeric] vector initial fillings GR stores (4 values; use NA relevant given model) [- /mm]. See details","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/run_GR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run GR model — run_GR","text":"list GR model output.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/sa_aeme.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sensitivity analysis on AEME model parameters — sa_aeme","title":"Run sensitivity analysis on AEME model parameters — sa_aeme","text":"calib_model() runs model compares observations provided. can run parallel using multiple cores availlable computer run quicker.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/sa_aeme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sensitivity analysis on AEME model parameters — sa_aeme","text":"","code":"sa_aeme(   aeme,   path = \".\",   param,   model,   model_controls = NULL,   FUN_list = NULL,   ctrl = NULL,   param_df = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/sa_aeme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sensitivity analysis on AEME model parameters — sa_aeme","text":"aeme aeme; object. path filepath; input files located relative `config`. param dataframe; parameters read csv file. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\", \"log\") model string; model calibrate. one model can passed. Options c(\"dy_cd\", \"glm_aed\" \"gotm_wet\"). model_controls dataframe; configuration loaded \"model_controls.csv\". FUN_list list functions; named according variables vars_sim. Funtions form function(df) used calculate model fit. NULL, uses mean absolute error (MAE). ctrl list; controls sensitivity analysis function created using create_control function. See create_control details. param_df dataframe; parameters used calibration. Requires columns c(\"model\", \"file\", \"name\", \"value\", \"min\", \"max\"). used restart previous calibration.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/sa_aeme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sensitivity analysis on AEME model parameters — sa_aeme","text":"string simulation id used read simulation output.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/sa_aeme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sensitivity analysis on AEME model parameters — sa_aeme","text":"","code":"if (FALSE) { # \\dontrun{   # Run sensitivity analysis   tmpdir <- tempdir()   aeme_dir <- system.file(\"extdata/lake/\", package = \"AEME\")   # Copy files from package into tempdir   file.copy(aeme_dir, tmpdir, recursive = TRUE)   path <- file.path(tmpdir, \"lake\")   aeme <- AEME::yaml_to_aeme(path = path, \"aeme.yaml\")   model_controls <- AEME::get_model_controls()   inf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1)   outf_factor = c(\"dy_cd\" = 1, \"glm_aed\" = 1, \"gotm_wet\" = 1)   model <- c(\"glm_aed\")   aeme <- AEME::build_aeme(path = path, aeme = aeme,                                     model = model, model_controls = model_controls,                                     inf_factor = inf_factor, ext_elev = 5,                                     use_bgc = FALSE)    # Load parameters   utils::data(\"aeme_parameters\", package = \"AEME\")   param <- aeme_parameters |>     dplyr::filter(file != \"wdr\")    # Function to calculate fitness   fit <- function(df) {     mean(df$model)   }    # Assign function to variable   FUN_list <- list(HYD_temp = fit)    # Set up control parameters for surface and bottom temperature   ctrl <- create_control(method = \"sa\", N = 2^3, ncore = 2L,                          parallel = TRUE,                          vars_sim = list(                                    surf_temp = list(var = \"HYD_temp\",                                                     month = c(10:12, 1:3),                                                     depth_range = c(0, 2)                                                     ),                                    bot_temp = list(var = \"HYD_temp\",                                                    month = c(10:12, 1:3),                                                    depth_range = c(10, 13)                                                    )                                    )   )    # Run sensitivity analysis AEME model   ctrl <- sa_aeme(aeme = aeme, path = path, param = param,                   model = model, ctrl = ctrl, model_controls = model_controls,                   FUN_list = FUN_list) } # }"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/update_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Update parameter values in param based on best_pars — update_param","title":"Update parameter values in param based on best_pars — update_param","text":"Update parameter values param based best_pars","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/update_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update parameter values in param based on best_pars — update_param","text":"","code":"update_param(   param,   calib,   na_value,   prob = 0.1,   fit_col = \"fit\",   best_pars = NULL )"},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/update_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update parameter values in param based on best_pars — update_param","text":"param data frame parameters update calib list calibration results loaded using read_calib. na_value numeric value corresponds NA value used calibration. fit_col character; name column containing fit values. Default \"fit\". best_pars data frame best parameters get_param. Defaults NULL. NULL, get_param called get best parameters.","code":""},{"path":"https://special-enigma-8p9lgre.pages.github.io/reference/update_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update parameter values in param based on best_pars — update_param","text":"data frame updated parameter values running model run_aeme_param","code":""}]
